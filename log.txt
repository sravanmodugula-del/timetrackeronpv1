2025-08-31T15:03:52: 2025-08-31T22:03:52.982Z 🟢 [SERVER] Starting FMB TimeTracker On-Premises Application...
2025-08-31T15:03:52: [dotenv@17.2.1] injecting env (0) from fmb-onprem\.env.fmb-onprem -- tip: ⚙️  override existing env vars with { override: true }
2025-08-31T15:03:52: [dotenv@17.2.1] injecting env (23) from .env -- tip: 📡 auto-backup env with Radar: https://dotenvx.com/radar
2025-08-31T15:03:52: 🏢 FMB On-Premises configuration loaded
2025-08-31T15:03:52: 🔍 [FMB-CONFIG] Looking for certificate at: C:\fmb-timetracker\saml_cert.pem
2025-08-31T15:03:52: ✅ [FMB-CONFIG] Certificate loaded successfully from: C:\fmb-timetracker\saml_cert.pem
2025-08-31T15:03:52: 🔍 [FMB-CONFIG] Certificate length: 1004 characters
2025-08-31T15:03:52: 2025-08-31T22:03:52.990Z 🟢 [FMB-ONPREM] FMB On-premises environment initialized
2025-08-31T15:03:52: 2025-08-31T22:03:52.990Z 🟢 [CONFIG] FMB session secret validated successfully
2025-08-31T15:03:52: 🔗 Connecting to FMB MS SQL database...
2025-08-31T15:03:53: ✅ FMB Database connection established successfully
2025-08-31T15:03:53: 2025-08-31T22:03:53.094Z 🟢 [DATABASE] FMB Database initialization completed successfully
2025-08-31T15:03:53: 2025-08-31T22:03:53.097Z 🟢 [SESSION] FMB Enterprise Session configured for production mode
2025-08-31T15:03:53: 2025-08-31T22:03:53.098Z 🟢 [SESSION] Initializing MS SQL session store for production
2025-08-31T15:03:53: 2025-08-31T22:03:53.099Z 🟢 [SESSION] Custom MS SQL session store initialized successfully
2025-08-31T15:03:53: 2025-08-31T22:03:53.099Z 🟢 [SESSION] Session store initialization completed
2025-08-31T15:03:53: 2025-08-31T22:03:53.099Z 🟢 [SERVER] FMB Session middleware configured successfully
2025-08-31T15:03:53: 2025-08-31T22:03:53.101Z 🟢 [SECURITY] Enterprise session security middleware activated
2025-08-31T15:03:53: 🚀 Setting up FMB SAML Authentication for On-Premises environment...
2025-08-31T15:03:53: 2025-08-31T22:03:53.104Z 🔵 [FMB-SAML] Initializing FMB SAML Authentication
2025-08-31T15:03:53: 🔧 [FMB-DATABASE] Creating new FMB storage instance...
2025-08-31T15:03:53: [dotenv@17.2.1] injecting env (0) from fmb-onprem\.env.fmb-onprem -- tip: ⚙️  override existing env vars with { override: true }
2025-08-31T15:03:53: [dotenv@17.2.1] injecting env (0) from .env -- tip: 📡 auto-backup env with Radar: https://dotenvx.com/radar
2025-08-31T15:03:53: 🏢 FMB On-Premises configuration loaded
2025-08-31T15:03:53: 🔍 [FMB-CONFIG] Looking for certificate at: C:\fmb-timetracker\saml_cert.pem
2025-08-31T15:03:53: ✅ [FMB-CONFIG] Certificate loaded successfully from: C:\fmb-timetracker\saml_cert.pem
2025-08-31T15:03:53: 🔍 [FMB-CONFIG] Certificate length: 1004 characters
2025-08-31T15:03:53: 🔗 [FMB-STORAGE] Connecting to FMB MS SQL Server...
2025-08-31T15:03:53: 2025-08-31T22:03:53.107Z 🟢 [FMB-SAML] SAML Certificate validation {
2025-08-31T15:03:53:   "certLength": 1004,
2025-08-31T15:03:53:   "hasBeginMarker": true,
2025-08-31T15:03:53:   "hasEndMarker": true
2025-08-31T15:03:53: }
2025-08-31T15:03:53: 2025-08-31T22:03:53.108Z 🔵 [FMB-SAML] FMB SAML Authentication setup completed
2025-08-31T15:03:53: 🛡️ [SESSION-MGMT] Enterprise session management routes registered
2025-08-31T15:03:53: 🛡️ [SESSION-MGMT] Enterprise session management routes registered
2025-08-31T15:03:53: 2025-08-31T22:03:53.112Z 🟢 [SERVER] FMB TimeTracker running on http://0.0.0.0:3000
2025-08-31T15:03:53: 2025-08-31T22:03:53.112Z 🟢 [SERVER] Environment: fmb-onprem
2025-08-31T15:03:53: 2025-08-31T22:03:53.112Z 🟢 [FMB-ONPREM] On-premises deployment active - SAML authentication enabled
2025-08-31T15:03:53: 2025-08-31T22:03:53.177Z 🗄️ [FMB-STORAGE] CONNECT: Successfully connected to MS SQL Server
2025-08-31T15:03:53: 🟢 [FMB-SESSION] Session table structure verified
2025-08-31T15:04:15: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:15: 2025-08-31T22:04:15.291Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677855197-9krvwf', recordCount: 1 }
2025-08-31T15:04:15: 2025-08-31T22:04:15.292Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:15:   "userId": "user-1756655138413",
2025-08-31T15:04:15:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:15: }
2025-08-31T15:04:15: 2025-08-31T22:04:15.293Z 🔵 [FMB-SAML] SAML ACS callback received - IdP-initiated flow {
2025-08-31T15:04:15:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:15:   "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0",
2025-08-31T15:04:15:   "timestamp": "2025-08-31T22:04:15.293Z",
2025-08-31T15:04:15:   "hasBody": true,
2025-08-31T15:04:15:   "bodyKeys": [
2025-08-31T15:04:15:     "SAMLResponse"
2025-08-31T15:04:15:   ],
2025-08-31T15:04:15:   "headers": {
2025-08-31T15:04:15:     "content-type": "application/x-www-form-urlencoded",
2025-08-31T15:04:15:     "content-length": "8093"
2025-08-31T15:04:15:   }
2025-08-31T15:04:15: }
2025-08-31T15:04:15: 2025-08-31T22:04:15.377Z 🔵 [FMB-SAML] SAML profile received {
2025-08-31T15:04:15:   "nameID": "Sravan.Modugula@fmb.com",
2025-08-31T15:04:15:   "email": "Sravan.Modugula@fmb.com",
2025-08-31T15:04:15:   "firstName": "Sravan",
2025-08-31T15:04:15:   "lastName": "Modugula"
2025-08-31T15:04:15: }
2025-08-31T15:04:15: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:15: 2025-08-31T22:04:15.411Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677855377-2p3hwa', recordCount: 1 }
2025-08-31T15:04:15: 🔄 [SQL] 
2025-08-31T15:04:15:  operation on users
2025-08-31T15:04:15: 🗄️ [SQL] Executing with 7 parameters
2025-08-31T15:04:15: ✅ [SQL] Operation completed: 1 rows affected
2025-08-31T15:04:15: 2025-08-31T22:04:15.456Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677855412-9c6yn1', recordCount: 0 }
2025-08-31T15:04:15: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:15: 2025-08-31T22:04:15.488Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677855456-g3j9y8', recordCount: 1 }
2025-08-31T15:04:15: 2025-08-31T22:04:15.488Z 🔵 [FMB-SAML] User upserted in database {
2025-08-31T15:04:15:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:15: }
2025-08-31T15:04:15: 2025-08-31T22:04:15.488Z 🔵 [FMB-SAML] User authenticated and stored {
2025-08-31T15:04:15:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:15: }
2025-08-31T15:04:15: 🗑️ [FMB-SESSION] Session destroyed successfully
2025-08-31T15:04:15: 2025-08-31T22:04:15.568Z 🟢 [FMB-SAML] Serializing user for session {
2025-08-31T15:04:15:   "userId": "user-1756655138413",
2025-08-31T15:04:15:   "timestamp": "2025-08-31T22:04:15.568Z",
2025-08-31T15:04:15:   "source": "saml"
2025-08-31T15:04:15: }
2025-08-31T15:04:15: 🔵 [FMB-SAML] User session established and saved: Sravan.Modugula@fmb.com
2025-08-31T15:04:15: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:15: 2025-08-31T22:04:15.814Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677855786-3psosv', recordCount: 1 }
2025-08-31T15:04:15: 2025-08-31T22:04:15.815Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:15:   "userId": "user-1756655138413",
2025-08-31T15:04:15:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:15: }
2025-08-31T15:04:15: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:15: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:15: 2025-08-31T22:04:15.976Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677855948-7t789u', recordCount: 1 }
2025-08-31T15:04:15: 2025-08-31T22:04:15.977Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:15:   "userId": "user-1756655138413",
2025-08-31T15:04:15:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:15: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.003Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677855974-n8wcu0', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.004Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 2025-08-31T22:04:16.554Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856522-x4uo9s', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.554Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.555Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:16:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:16:   "isAuthenticated": true
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.555Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 2025-08-31T22:04:16.571Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856540-2bsihm', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.571Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.584Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856555-hymvib', recordCount: 1 }
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 2025-08-31T22:04:16.781Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856748-x3c1nb', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.781Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.781Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:16:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:16:   "isAuthenticated": true
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.781Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 2025-08-31T22:04:16.783Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856750-8d1bkq', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.784Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.784Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:04:16:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:16:   "isAuthenticated": true
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.784Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.784Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 2025-08-31T22:04:16.807Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856776-2xjwfy', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.807Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.807Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/stats {
2025-08-31T15:04:16:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:16:   "isAuthenticated": true
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.807Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 3 parameters
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:16: 2025-08-31T22:04:16.811Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856780-6qo94f', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.811Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.811Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/project-breakdown {
2025-08-31T15:04:16:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:16:   "isAuthenticated": true
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.811Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.836Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856781-tpiu4t', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.841Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.864Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856802-pcaakj', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.864Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.864Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/recent-activity {
2025-08-31T15:04:16:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:16:   "isAuthenticated": true
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.864Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:16:   "userId": "user-1756655138413",
2025-08-31T15:04:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:16: }
2025-08-31T15:04:16: 2025-08-31T22:04:16.866Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856807-pvfnv8', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.868Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856808-3m8v06', recordCount: 1 }
2025-08-31T15:04:16: 2025-08-31T22:04:16.869Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677856808-beh0lk', recordCount: 1 }
2025-08-31T15:04:21: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:21: 2025-08-31T22:04:21.809Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677861781-pnuxum', recordCount: 1 }
2025-08-31T15:04:21: 2025-08-31T22:04:21.810Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:21:   "userId": "user-1756655138413",
2025-08-31T15:04:21:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:21: }
2025-08-31T15:04:21: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:21: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:21: 2025-08-31T22:04:21.969Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677861941-tqwgxc', recordCount: 1 }
2025-08-31T15:04:21: 2025-08-31T22:04:21.969Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:21:   "userId": "user-1756655138413",
2025-08-31T15:04:21:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:21: }
2025-08-31T15:04:21: 2025-08-31T22:04:21.971Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677861942-21ogsg', recordCount: 1 }
2025-08-31T15:04:21: 2025-08-31T22:04:21.971Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:21:   "userId": "user-1756655138413",
2025-08-31T15:04:21:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:21: }
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 2025-08-31T22:04:22.208Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862181-6ao22n', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.208Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.208Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:22:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:22:   "isAuthenticated": true
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.208Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 2025-08-31T22:04:22.219Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862191-c9qb71', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.219Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.237Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862209-414at0', recordCount: 1 }
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 2025-08-31T22:04:22.453Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862424-m9793y', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.453Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.453Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/stats {
2025-08-31T15:04:22:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:22:   "isAuthenticated": true
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.453Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 3 parameters
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 2025-08-31T22:04:22.456Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862427-siommx', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.456Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.456Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:04:22:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:22:   "isAuthenticated": true
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.456Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.456Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:04:22: 2025-08-31T22:04:22.457Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862426-td9ggx', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.457Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.458Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:22:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:22:   "isAuthenticated": true
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.458Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:22: 2025-08-31T22:04:22.459Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862428-nydbad', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.459Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.459Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/recent-activity {
2025-08-31T15:04:22:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:22:   "isAuthenticated": true
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.460Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.460Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862429-leoxqk', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.461Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.461Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/project-breakdown {
2025-08-31T15:04:22:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:22:   "isAuthenticated": true
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.461Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:22:   "userId": "user-1756655138413",
2025-08-31T15:04:22:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:22: }
2025-08-31T15:04:22: 2025-08-31T22:04:22.481Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862454-uaclz3', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.482Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862454-0d41s2', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.482Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862454-rszu3b', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.484Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677862458-byhmkm', recordCount: 1 }
2025-08-31T15:04:22: 2025-08-31T22:04:22.486Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:04:24: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:24: 2025-08-31T22:04:24.449Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677864420-nldn14', recordCount: 1 }
2025-08-31T15:04:24: 2025-08-31T22:04:24.449Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:24:   "userId": "user-1756655138413",
2025-08-31T15:04:24:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:24: }
2025-08-31T15:04:24: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:24: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:24: 2025-08-31T22:04:24.612Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677864584-xozn8y', recordCount: 1 }
2025-08-31T15:04:24: 2025-08-31T22:04:24.612Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:24:   "userId": "user-1756655138413",
2025-08-31T15:04:24:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:24: }
2025-08-31T15:04:24: 2025-08-31T22:04:24.613Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677864586-srp87u', recordCount: 1 }
2025-08-31T15:04:24: 2025-08-31T22:04:24.613Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:24:   "userId": "user-1756655138413",
2025-08-31T15:04:24:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:24: }
2025-08-31T15:04:24: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:24: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:24: 2025-08-31T22:04:24.850Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677864821-p2l99q', recordCount: 1 }
2025-08-31T15:04:24: 2025-08-31T22:04:24.850Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:24:   "userId": "user-1756655138413",
2025-08-31T15:04:24:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:24: }
2025-08-31T15:04:24: 2025-08-31T22:04:24.850Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:24:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:24:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:24:   "isAuthenticated": true
2025-08-31T15:04:24: }
2025-08-31T15:04:24: 2025-08-31T22:04:24.850Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:24:   "userId": "user-1756655138413",
2025-08-31T15:04:24:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:24: }
2025-08-31T15:04:24: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:24: 2025-08-31T22:04:24.852Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677864823-jng3r3', recordCount: 1 }
2025-08-31T15:04:24: 2025-08-31T22:04:24.852Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:24:   "userId": "user-1756655138413",
2025-08-31T15:04:24:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:24: }
2025-08-31T15:04:24: 2025-08-31T22:04:24.877Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677864851-rxj0ep', recordCount: 1 }
2025-08-31T15:04:25: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:25: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:25: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:25: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:25: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:25: 2025-08-31T22:04:25.087Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677865060-xtgiib', recordCount: 1 }
2025-08-31T15:04:25: 2025-08-31T22:04:25.087Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:25:   "userId": "user-1756655138413",
2025-08-31T15:04:25:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.088Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/stats {
2025-08-31T15:04:25:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:25:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:25:   "isAuthenticated": true
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.088Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:25:   "userId": "user-1756655138413",
2025-08-31T15:04:25:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 🗄️ [SQL] Executing with 3 parameters
2025-08-31T15:04:25: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:25: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:25: 2025-08-31T22:04:25.090Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677865062-z6a4sr', recordCount: 1 }
2025-08-31T15:04:25: 2025-08-31T22:04:25.090Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:25:   "userId": "user-1756655138413",
2025-08-31T15:04:25:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.090Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:04:25:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:25:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:25:   "isAuthenticated": true
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.090Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:25:   "userId": "user-1756655138413",
2025-08-31T15:04:25:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.090Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:04:25: 2025-08-31T22:04:25.091Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677865062-7ycufs', recordCount: 1 }
2025-08-31T15:04:25: 2025-08-31T22:04:25.091Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:25:   "userId": "user-1756655138413",
2025-08-31T15:04:25:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.091Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:25:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:25:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:25:   "isAuthenticated": true
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.091Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:25:   "userId": "user-1756655138413",
2025-08-31T15:04:25:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:25: 2025-08-31T22:04:25.093Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677865064-xkks8v', recordCount: 1 }
2025-08-31T15:04:25: 2025-08-31T22:04:25.093Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:25:   "userId": "user-1756655138413",
2025-08-31T15:04:25:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.093Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/project-breakdown {
2025-08-31T15:04:25:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:25:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:25:   "isAuthenticated": true
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.093Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:25:   "userId": "user-1756655138413",
2025-08-31T15:04:25:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.094Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677865066-vkw0tb', recordCount: 1 }
2025-08-31T15:04:25: 2025-08-31T22:04:25.094Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:25:   "userId": "user-1756655138413",
2025-08-31T15:04:25:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.094Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/recent-activity {
2025-08-31T15:04:25:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:25:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:25:   "isAuthenticated": true
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.094Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:25:   "userId": "user-1756655138413",
2025-08-31T15:04:25:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:25: }
2025-08-31T15:04:25: 2025-08-31T22:04:25.115Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677865088-djyz0d', recordCount: 1 }
2025-08-31T15:04:25: 2025-08-31T22:04:25.116Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677865088-537d87', recordCount: 1 }
2025-08-31T15:04:25: 2025-08-31T22:04:25.117Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677865088-hfw695', recordCount: 1 }
2025-08-31T15:04:25: 2025-08-31T22:04:25.119Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677865092-mxxhmv', recordCount: 1 }
2025-08-31T15:04:25: 2025-08-31T22:04:25.121Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 2025-08-31T22:04:36.137Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876110-yi4e44', recordCount: 1 }
2025-08-31T15:04:36: 2025-08-31T22:04:36.137Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 2025-08-31T22:04:36.285Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876258-r32ltx', recordCount: 1 }
2025-08-31T15:04:36: 2025-08-31T22:04:36.285Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.288Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876259-zahe8y', recordCount: 1 }
2025-08-31T15:04:36: 2025-08-31T22:04:36.288Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 2025-08-31T22:04:36.544Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876517-55y7pm', recordCount: 1 }
2025-08-31T15:04:36: 2025-08-31T22:04:36.544Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.545Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:36:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:36:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:36:   "isAuthenticated": true
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.545Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 2025-08-31T22:04:36.553Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876526-3sfne6', recordCount: 1 }
2025-08-31T15:04:36: 2025-08-31T22:04:36.554Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.571Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876545-z8s4kf', recordCount: 1 }
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 2025-08-31T22:04:36.781Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876756-j1l6kl', recordCount: 1 }
2025-08-31T15:04:36: 2025-08-31T22:04:36.782Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.782Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/projects {
2025-08-31T15:04:36:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:36:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:36:   "isAuthenticated": true
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.782Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 2025-08-31T22:04:36.783Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876755-u0ig2r', recordCount: 1 }
2025-08-31T15:04:36: 2025-08-31T22:04:36.783Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.784Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/employees {
2025-08-31T15:04:36:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:36:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:36:   "isAuthenticated": true
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.784Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 2025-08-31T22:04:36.785Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876754-g0v147', recordCount: 1 }
2025-08-31T15:04:36: 2025-08-31T22:04:36.786Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.786Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:36:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:36:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:36:   "isAuthenticated": true
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.786Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:36: 2025-08-31T22:04:36.788Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876752-wx7rw4', recordCount: 1 }
2025-08-31T15:04:36: 2025-08-31T22:04:36.788Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.788Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:04:36:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:36:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:36:   "isAuthenticated": true
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.788Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:36:   "userId": "user-1756655138413",
2025-08-31T15:04:36:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.788Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:04:36: 2025-08-31T22:04:36.811Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876784-joejl0', recordCount: 0 }
2025-08-31T15:04:36: ❌ [EXECUTE-exec-1756677876782-hrtnol] Query execution failed: {
2025-08-31T15:04:36:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:04:36:   code: 'EREQUEST',
2025-08-31T15:04:36:   number: 13601,
2025-08-31T15:04:36:   severity: 16,
2025-08-31T15:04:36:   state: 1,
2025-08-31T15:04:36:   procedure: '',
2025-08-31T15:04:36:   lineNumber: 2,
2025-08-31T15:04:36:   query: '\n' +
2025-08-31T15:04:36:     '      SELECT p.*,\n' +
2025-08-31T15:04:36:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:04:36:     '         FROM project_employees pe\n' +
2025-08-31T15:04:36:     '         JOIN employees e ON pe.employee_id = e.id\n' +
2025-08-31T15:04:36:     '         WHERE pe.project_id = p',
2025-08-31T15:04:36:   paramCount: 1,
2025-08-31T15:04:36:   paramValues: [ 'user-1756655138413' ]
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.814Z 🗄️ [FMB-STORAGE] EXECUTE: Query execution failed {
2025-08-31T15:04:36:   executeId: 'exec-1756677876782-hrtnol',
2025-08-31T15:04:36:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:04:36:   code: 'EREQUEST',
2025-08-31T15:04:36:   query: '\n' +
2025-08-31T15:04:36:     '      SELECT p.*,\n' +
2025-08-31T15:04:36:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:04:36:     '         FROM proj...'
2025-08-31T15:04:36: }
2025-08-31T15:04:36: Error fetching projects: RequestError: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:04:36:     at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:384:15)
2025-08-31T15:04:36:     at Connection.emit (node:events:518:28)
2025-08-31T15:04:36:     at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:04:36:     at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:04:36:     at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:04:36:     at Readable.emit (node:events:518:28)
2025-08-31T15:04:36:     at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:04:36:     at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:04:36:     at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:04:36:     at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:04:36:   code: 'EREQUEST',
2025-08-31T15:04:36:   originalError: Error: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:04:36:       at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:382:19)
2025-08-31T15:04:36:       at Connection.emit (node:events:518:28)
2025-08-31T15:04:36:       at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:04:36:       at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:04:36:       at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:04:36:       at Readable.emit (node:events:518:28)
2025-08-31T15:04:36:       at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:04:36:       at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:04:36:       at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:04:36:       at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:04:36:     info: ErrorMessageToken {
2025-08-31T15:04:36:       name: 'ERROR',
2025-08-31T15:04:36:       handlerName: 'onErrorMessage',
2025-08-31T15:04:36:       number: 13601,
2025-08-31T15:04:36:       state: 1,
2025-08-31T15:04:36:       class: 16,
2025-08-31T15:04:36:       message: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:04:36:       serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:04:36:       procName: '',
2025-08-31T15:04:36:       lineNumber: 2
2025-08-31T15:04:36:     }
2025-08-31T15:04:36:   },
2025-08-31T15:04:36:   number: 13601,
2025-08-31T15:04:36:   lineNumber: 2,
2025-08-31T15:04:36:   state: 1,
2025-08-31T15:04:36:   class: 16,
2025-08-31T15:04:36:   serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:04:36:   procName: '',
2025-08-31T15:04:36:   precedingErrors: []
2025-08-31T15:04:36: }
2025-08-31T15:04:36: 2025-08-31T22:04:36.817Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677876786-25vlfj', recordCount: 1 }
2025-08-31T15:04:36: 2025-08-31T22:04:36.818Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:04:37: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:37: 2025-08-31T22:04:37.032Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677877005-wxyjvk', recordCount: 1 }
2025-08-31T15:04:37: 2025-08-31T22:04:37.032Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:37:   "userId": "user-1756655138413",
2025-08-31T15:04:37:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:37: }
2025-08-31T15:04:37: 2025-08-31T22:04:36.957Z 🔴 [FRONTEND-API] HTTP 500 error on https://timetracker.fmb.com/api/projects {
2025-08-31T15:04:37:   data: {
2025-08-31T15:04:37:     status: 500,
2025-08-31T15:04:37:     statusText: '',
2025-08-31T15:04:37:     responseText: '{"message":"Failed to fetch projects"}',
2025-08-31T15:04:37:     url: 'https://timetracker.fmb.com/api/projects'
2025-08-31T15:04:37:   },
2025-08-31T15:04:37:   url: 'https://timetracker.fmb.com/projects',
2025-08-31T15:04:37:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:04:37:   ip: '192.168.210.12:58575',
2025-08-31T15:04:37:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:04:37: }
2025-08-31T15:04:42: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:42: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:42: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:42: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:42: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:42: 2025-08-31T22:04:42.817Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677882791-ufry4h', recordCount: 1 }
2025-08-31T15:04:42: 2025-08-31T22:04:42.817Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:42:   "userId": "user-1756655138413",
2025-08-31T15:04:42:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:42: }
2025-08-31T15:04:42: 2025-08-31T22:04:42.817Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/users/current-role {
2025-08-31T15:04:42:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:42:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:42:   "isAuthenticated": true
2025-08-31T15:04:42: }
2025-08-31T15:04:42: 2025-08-31T22:04:42.817Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:42:   "userId": "user-1756655138413",
2025-08-31T15:04:42:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:42: }
2025-08-31T15:04:42: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:42: 2025-08-31T22:04:42.818Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677882790-tyf0kj', recordCount: 1 }
2025-08-31T15:04:42: 2025-08-31T22:04:42.818Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:42:   "userId": "user-1756655138413",
2025-08-31T15:04:42:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:42: }
2025-08-31T15:04:42: 2025-08-31T22:04:42.819Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:42:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:42:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:42:   "isAuthenticated": true
2025-08-31T15:04:42: }
2025-08-31T15:04:42: 2025-08-31T22:04:42.819Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:42:   "userId": "user-1756655138413",
2025-08-31T15:04:42:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:42: }
2025-08-31T15:04:42: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:42: 2025-08-31T22:04:42.820Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677882794-u94b61', recordCount: 1 }
2025-08-31T15:04:42: 2025-08-31T22:04:42.820Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:42:   "userId": "user-1756655138413",
2025-08-31T15:04:42:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:42: }
2025-08-31T15:04:42: 2025-08-31T22:04:42.821Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677882795-7nk1u1', recordCount: 1 }
2025-08-31T15:04:42: 2025-08-31T22:04:42.821Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:42:   "userId": "user-1756655138413",
2025-08-31T15:04:42:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:42: }
2025-08-31T15:04:42: 2025-08-31T22:04:42.828Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677882801-8cyi38', recordCount: 1 }
2025-08-31T15:04:42: 2025-08-31T22:04:42.828Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:42:   "userId": "user-1756655138413",
2025-08-31T15:04:42:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:42: }
2025-08-31T15:04:42: 2025-08-31T22:04:42.845Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677882819-99gq7l', recordCount: 1 }
2025-08-31T15:04:42: 2025-08-31T22:04:42.847Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677882817-lwmr30', recordCount: 1 }
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 2025-08-31T22:04:45.324Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885297-w41jf5', recordCount: 1 }
2025-08-31T15:04:45: 2025-08-31T22:04:45.325Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.325Z 🟢 [FMB-SAML] FMB Authentication check for POST /api/users/change-role {
2025-08-31T15:04:45:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:45:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:45:   "isAuthenticated": true
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.325Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 2025-08-31T22:04:45.394Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885366-t8zrmp', recordCount: 1 }
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 2025-08-31T22:04:45.541Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885514-1o5v8q', recordCount: 1 }
2025-08-31T15:04:45: 2025-08-31T22:04:45.541Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.541Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:45:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:45:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:45:   "isAuthenticated": true
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.541Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 2025-08-31T22:04:45.543Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885513-vliozx', recordCount: 1 }
2025-08-31T15:04:45: 2025-08-31T22:04:45.543Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.543Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/users/current-role {
2025-08-31T15:04:45:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:45:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:45:   "isAuthenticated": true
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.543Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 2025-08-31T22:04:45.546Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885518-zvnjgo', recordCount: 1 }
2025-08-31T15:04:45: 2025-08-31T22:04:45.546Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.569Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885541-1p8pww', recordCount: 1 }
2025-08-31T15:04:45: 2025-08-31T22:04:45.571Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885543-5sl2gr', recordCount: 1 }
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 2025-08-31T22:04:45.686Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885657-2q3y4m', recordCount: 1 }
2025-08-31T15:04:45: 2025-08-31T22:04:45.686Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.687Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885659-773zyg', recordCount: 1 }
2025-08-31T15:04:45: 2025-08-31T22:04:45.687Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 2025-08-31T22:04:45.960Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885934-ikok19', recordCount: 1 }
2025-08-31T15:04:45: 2025-08-31T22:04:45.961Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.961Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:45:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:45:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:45:   "isAuthenticated": true
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.961Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:45: 2025-08-31T22:04:45.962Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885935-vbwdo7', recordCount: 1 }
2025-08-31T15:04:45: 2025-08-31T22:04:45.963Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:45:   "userId": "user-1756655138413",
2025-08-31T15:04:45:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:45: }
2025-08-31T15:04:45: 2025-08-31T22:04:45.990Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677885961-9k70c7', recordCount: 1 }
2025-08-31T15:04:46: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:46: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:46: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:46: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:46: 2025-08-31T22:04:46.222Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677886195-kh5bbd', recordCount: 1 }
2025-08-31T15:04:46: 2025-08-31T22:04:46.222Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:46:   "userId": "user-1756655138413",
2025-08-31T15:04:46:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:46: }
2025-08-31T15:04:46: 2025-08-31T22:04:46.223Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677886192-bzyfnt', recordCount: 1 }
2025-08-31T15:04:46: 2025-08-31T22:04:46.223Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:46:   "userId": "user-1756655138413",
2025-08-31T15:04:46:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:46: }
2025-08-31T15:04:46: 2025-08-31T22:04:46.223Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:46:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:46:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:46:   "isAuthenticated": true
2025-08-31T15:04:46: }
2025-08-31T15:04:46: 2025-08-31T22:04:46.224Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:46:   "userId": "user-1756655138413",
2025-08-31T15:04:46:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:46: }
2025-08-31T15:04:46: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:46: 2025-08-31T22:04:46.224Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677886194-idv98l', recordCount: 1 }
2025-08-31T15:04:46: 2025-08-31T22:04:46.224Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:46:   "userId": "user-1756655138413",
2025-08-31T15:04:46:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:46: }
2025-08-31T15:04:46: 2025-08-31T22:04:46.225Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/users/current-role {
2025-08-31T15:04:46:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:46:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:46:   "isAuthenticated": true
2025-08-31T15:04:46: }
2025-08-31T15:04:46: 2025-08-31T22:04:46.225Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:46:   "userId": "user-1756655138413",
2025-08-31T15:04:46:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:46: }
2025-08-31T15:04:46: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:46: 2025-08-31T22:04:46.226Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677886194-3tvt3w', recordCount: 1 }
2025-08-31T15:04:46: 2025-08-31T22:04:46.227Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:46:   "userId": "user-1756655138413",
2025-08-31T15:04:46:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:46: }
2025-08-31T15:04:46: 2025-08-31T22:04:46.253Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677886224-mucyhy', recordCount: 1 }
2025-08-31T15:04:46: 2025-08-31T22:04:46.255Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677886225-foxi8w', recordCount: 1 }
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 2025-08-31T22:04:48.194Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888165-y3tjuo', recordCount: 1 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.194Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.194Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:48:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:48:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:48:   "isAuthenticated": true
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.194Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 2025-08-31T22:04:48.196Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888168-rdnez6', recordCount: 1 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.196Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.197Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888167-6ir8yi', recordCount: 1 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.197Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.197Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:04:48:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:48:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:48:   "isAuthenticated": true
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.197Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.198Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:04:48: 2025-08-31T22:04:48.202Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888171-zasysf', recordCount: 1 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.202Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.202Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/employees {
2025-08-31T15:04:48:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:48:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:48:   "isAuthenticated": true
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.203Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 2025-08-31T22:04:48.211Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888183-sgjlso', recordCount: 1 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.211Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.212Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/admin/users {
2025-08-31T15:04:48:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:48:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:48:   "isAuthenticated": true
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.212Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 2025-08-31T22:04:48.219Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888192-6yr9c8', recordCount: 1 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.220Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.220Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/admin/users/without-employee {
2025-08-31T15:04:48:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:48:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:48:   "isAuthenticated": true
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.220Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 2025-08-31T22:04:48.221Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888195-a75o0v', recordCount: 1 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.227Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.230Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888203-sn18ty', recordCount: 0 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.238Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888212-eqque1', recordCount: 1 }
2025-08-31T15:04:48: Error fetching users: TypeError: activeStorage.getAllUsers is not a function
2025-08-31T15:04:48:     at file:///C:/fmb-timetracker/dist/index.js:5072:41
2025-08-31T15:04:48:     at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-31T15:04:48: 2025-08-31T22:04:48.247Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888220-oefx20', recordCount: 1 }
2025-08-31T15:04:48: Error fetching unlinked users: TypeError: activeStorage.getUsersWithoutEmployeeProfile is not a function
2025-08-31T15:04:48:     at file:///C:/fmb-timetracker/dist/index.js:5087:41
2025-08-31T15:04:48:     at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:48: 2025-08-31T22:04:48.433Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888404-bzrx0d', recordCount: 1 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.434Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.354Z 🔴 [FRONTEND-API] HTTP 500 error on https://timetracker.fmb.com/api/admin/users {
2025-08-31T15:04:48:   data: {
2025-08-31T15:04:48:     status: 500,
2025-08-31T15:04:48:     statusText: '',
2025-08-31T15:04:48:     responseText: '{"message":"Failed to fetch users"}',
2025-08-31T15:04:48:     url: 'https://timetracker.fmb.com/api/admin/users'
2025-08-31T15:04:48:   },
2025-08-31T15:04:48:   url: 'https://timetracker.fmb.com/admin/users',
2025-08-31T15:04:48:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:04:48:   ip: '192.168.210.12:58575',
2025-08-31T15:04:48:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.436Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677888406-pudul4', recordCount: 1 }
2025-08-31T15:04:48: 2025-08-31T22:04:48.436Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:48:   "userId": "user-1756655138413",
2025-08-31T15:04:48:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:48: }
2025-08-31T15:04:48: 2025-08-31T22:04:48.355Z 🔴 [FRONTEND-API] HTTP 500 error on https://timetracker.fmb.com/api/admin/users/without-employee {
2025-08-31T15:04:48:   data: {
2025-08-31T15:04:48:     status: 500,
2025-08-31T15:04:48:     statusText: '',
2025-08-31T15:04:48:     responseText: '{"message":"Failed to fetch unlinked users"}',
2025-08-31T15:04:48:     url: 'https://timetracker.fmb.com/api/admin/users/without-employee'
2025-08-31T15:04:48:   },
2025-08-31T15:04:48:   url: 'https://timetracker.fmb.com/admin/users',
2025-08-31T15:04:48:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:04:48:   ip: '192.168.210.12:58575',
2025-08-31T15:04:48:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:04:48: }
2025-08-31T15:04:49: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:49: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:49: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:49: 2025-08-31T22:04:49.718Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677889690-dlpsnp', recordCount: 1 }
2025-08-31T15:04:49: 2025-08-31T22:04:49.718Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:49:   "userId": "user-1756655138413",
2025-08-31T15:04:49:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:49: }
2025-08-31T15:04:49: 2025-08-31T22:04:49.718Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:04:49:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:49:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:49:   "isAuthenticated": true
2025-08-31T15:04:49: }
2025-08-31T15:04:49: 2025-08-31T22:04:49.718Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:49:   "userId": "user-1756655138413",
2025-08-31T15:04:49:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:49: }
2025-08-31T15:04:49: 2025-08-31T22:04:49.718Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:04:49: 2025-08-31T22:04:49.719Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677889692-t3x8yj', recordCount: 1 }
2025-08-31T15:04:49: 2025-08-31T22:04:49.719Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:49:   "userId": "user-1756655138413",
2025-08-31T15:04:49:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:49: }
2025-08-31T15:04:49: 2025-08-31T22:04:49.720Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677889692-a5xnl3', recordCount: 1 }
2025-08-31T15:04:49: 2025-08-31T22:04:49.720Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:49:   "userId": "user-1756655138413",
2025-08-31T15:04:49:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:49: }
2025-08-31T15:04:49: 2025-08-31T22:04:49.720Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:49:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:49:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:49:   "isAuthenticated": true
2025-08-31T15:04:49: }
2025-08-31T15:04:49: 2025-08-31T22:04:49.720Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:49:   "userId": "user-1756655138413",
2025-08-31T15:04:49:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:49: }
2025-08-31T15:04:49: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:49: 2025-08-31T22:04:49.746Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:04:49: 2025-08-31T22:04:49.748Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677889721-w32cgv', recordCount: 1 }
2025-08-31T15:04:52: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:52: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:52: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:52: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:52: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:52: 2025-08-31T22:04:52.291Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677892265-z8qe6o', recordCount: 1 }
2025-08-31T15:04:52: 2025-08-31T22:04:52.291Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:52:   "userId": "user-1756655138413",
2025-08-31T15:04:52:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.292Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/employees {
2025-08-31T15:04:52:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:52:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:52:   "isAuthenticated": true
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.292Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:52:   "userId": "user-1756655138413",
2025-08-31T15:04:52:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:52: 2025-08-31T22:04:52.293Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677892266-5b4eeg', recordCount: 1 }
2025-08-31T15:04:52: 2025-08-31T22:04:52.293Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:52:   "userId": "user-1756655138413",
2025-08-31T15:04:52:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.294Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:52:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:52:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:52:   "isAuthenticated": true
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.294Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:52:   "userId": "user-1756655138413",
2025-08-31T15:04:52:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:52: 2025-08-31T22:04:52.296Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677892268-da83ft', recordCount: 1 }
2025-08-31T15:04:52: 2025-08-31T22:04:52.296Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:52:   "userId": "user-1756655138413",
2025-08-31T15:04:52:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.296Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/departments {
2025-08-31T15:04:52:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:52:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:52:   "isAuthenticated": true
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.296Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:52:   "userId": "user-1756655138413",
2025-08-31T15:04:52:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.297Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677892269-6srwly', recordCount: 1 }
2025-08-31T15:04:52: 2025-08-31T22:04:52.298Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:52:   "userId": "user-1756655138413",
2025-08-31T15:04:52:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.299Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677892267-ho33wu', recordCount: 1 }
2025-08-31T15:04:52: 2025-08-31T22:04:52.299Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:52:   "userId": "user-1756655138413",
2025-08-31T15:04:52:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.299Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:04:52:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:52:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:52:   "isAuthenticated": true
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.300Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:52:   "userId": "user-1756655138413",
2025-08-31T15:04:52:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:52: }
2025-08-31T15:04:52: 2025-08-31T22:04:52.300Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:04:52: 2025-08-31T22:04:52.318Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677892292-g3sgpv', recordCount: 0 }
2025-08-31T15:04:52: 2025-08-31T22:04:52.320Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677892294-byeud4', recordCount: 1 }
2025-08-31T15:04:52: 2025-08-31T22:04:52.324Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677892297-enbegf', recordCount: 1 }
2025-08-31T15:04:52: 📋 Departments API: Found 1 departments
2025-08-31T15:04:52: 2025-08-31T22:04:52.330Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:04:56: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:56: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:56: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:56: 2025-08-31T22:04:56.437Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677896408-6j30xp', recordCount: 1 }
2025-08-31T15:04:56: 2025-08-31T22:04:56.438Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:56:   "userId": "user-1756655138413",
2025-08-31T15:04:56:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:56: }
2025-08-31T15:04:56: 2025-08-31T22:04:56.438Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:56:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:56:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:56:   "isAuthenticated": true
2025-08-31T15:04:56: }
2025-08-31T15:04:56: 2025-08-31T22:04:56.438Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:56:   "userId": "user-1756655138413",
2025-08-31T15:04:56:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:56: }
2025-08-31T15:04:56: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:56: 2025-08-31T22:04:56.439Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677896406-s81lxv', recordCount: 1 }
2025-08-31T15:04:56: 2025-08-31T22:04:56.439Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:56:   "userId": "user-1756655138413",
2025-08-31T15:04:56:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:56: }
2025-08-31T15:04:56: 2025-08-31T22:04:56.440Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677896407-fq5gbp', recordCount: 1 }
2025-08-31T15:04:56: 2025-08-31T22:04:56.440Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:56:   "userId": "user-1756655138413",
2025-08-31T15:04:56:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:56: }
2025-08-31T15:04:56: 2025-08-31T22:04:56.441Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:04:56:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:56:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:56:   "isAuthenticated": true
2025-08-31T15:04:56: }
2025-08-31T15:04:56: 2025-08-31T22:04:56.441Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:56:   "userId": "user-1756655138413",
2025-08-31T15:04:56:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:56: }
2025-08-31T15:04:56: 2025-08-31T22:04:56.441Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:04:56: 2025-08-31T22:04:56.466Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677896438-6fxob7', recordCount: 1 }
2025-08-31T15:04:56: 2025-08-31T22:04:56.469Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:04:57: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:57: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:57: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:57: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:57: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:57: 2025-08-31T22:04:57.803Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677897774-cw2vh8', recordCount: 1 }
2025-08-31T15:04:57: 2025-08-31T22:04:57.803Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:57:   "userId": "user-1756655138413",
2025-08-31T15:04:57:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.804Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:04:57:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:57:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:57:   "isAuthenticated": true
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.804Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:57:   "userId": "user-1756655138413",
2025-08-31T15:04:57:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.804Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:04:57: 2025-08-31T22:04:57.806Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677897775-fekc5m', recordCount: 1 }
2025-08-31T15:04:57: 2025-08-31T22:04:57.806Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:57:   "userId": "user-1756655138413",
2025-08-31T15:04:57:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.806Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/employees {
2025-08-31T15:04:57:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:57:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:57:   "isAuthenticated": true
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.806Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:57:   "userId": "user-1756655138413",
2025-08-31T15:04:57:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:57: 2025-08-31T22:04:57.809Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677897772-lzt8vr', recordCount: 1 }
2025-08-31T15:04:57: 2025-08-31T22:04:57.809Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:57:   "userId": "user-1756655138413",
2025-08-31T15:04:57:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.810Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:04:57:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:57:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:57:   "isAuthenticated": true
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.810Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:57:   "userId": "user-1756655138413",
2025-08-31T15:04:57:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:04:57: 2025-08-31T22:04:57.812Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677897779-fus9vx', recordCount: 1 }
2025-08-31T15:04:57: 2025-08-31T22:04:57.812Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:57:   "userId": "user-1756655138413",
2025-08-31T15:04:57:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.812Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/departments {
2025-08-31T15:04:57:   "ip": "192.168.210.12:58575",
2025-08-31T15:04:57:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:04:57:   "isAuthenticated": true
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.813Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:04:57:   "userId": "user-1756655138413",
2025-08-31T15:04:57:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.814Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677897778-um1nh8', recordCount: 1 }
2025-08-31T15:04:57: 2025-08-31T22:04:57.814Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:04:57:   "userId": "user-1756655138413",
2025-08-31T15:04:57:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:04:57: }
2025-08-31T15:04:57: 2025-08-31T22:04:57.831Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:04:57: 2025-08-31T22:04:57.837Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677897806-18p124', recordCount: 0 }
2025-08-31T15:04:57: 2025-08-31T22:04:57.839Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677897810-ni6u9v', recordCount: 1 }
2025-08-31T15:04:57: 2025-08-31T22:04:57.840Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677897813-8x4kb9', recordCount: 1 }
2025-08-31T15:04:57: 📋 Departments API: Found 1 departments
2025-08-31T15:05:09: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:09: 2025-08-31T22:05:09.880Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677909852-fcvonz', recordCount: 1 }
2025-08-31T15:05:09: 2025-08-31T22:05:09.880Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:09:   "userId": "user-1756655138413",
2025-08-31T15:05:09:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:09: }
2025-08-31T15:05:09: 2025-08-31T22:05:09.880Z 🟢 [FMB-SAML] FMB Authentication check for POST /api/departments {
2025-08-31T15:05:09:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:09:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:09:   "isAuthenticated": true
2025-08-31T15:05:09: }
2025-08-31T15:05:09: 2025-08-31T22:05:09.880Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:09:   "userId": "user-1756655138413",
2025-08-31T15:05:09:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:09: }
2025-08-31T15:05:09: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:09: 2025-08-31T22:05:09.909Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677909881-h3zb0d', recordCount: 1 }
2025-08-31T15:05:09: ❌ Error creating department: {
2025-08-31T15:05:09:   message: 'activeStorage.getOrganization is not a function',
2025-08-31T15:05:09:   code: undefined,
2025-08-31T15:05:09:   type: 'TypeError'
2025-08-31T15:05:09: }
2025-08-31T15:05:10: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:10: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:10: 2025-08-31T22:05:10.065Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677910037-btch1t', recordCount: 1 }
2025-08-31T15:05:10: 2025-08-31T22:05:10.066Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:10:   "userId": "user-1756655138413",
2025-08-31T15:05:10:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:10: }
2025-08-31T15:05:10: 2025-08-31T22:05:09.983Z 🔴 [FRONTEND-API] Request 6f16gng85 failed {
2025-08-31T15:05:10:   data: {
2025-08-31T15:05:10:     requestId: '6f16gng85',
2025-08-31T15:05:10:     method: 'POST',
2025-08-31T15:05:10:     url: '/api/departments',
2025-08-31T15:05:10:     status: 400,
2025-08-31T15:05:10:     error: {
2025-08-31T15:05:10:       message: 'Invalid organization data. Please verify organization exists.',
2025-08-31T15:05:10:       code: 'INVALID_ORGANIZATION_DATA'
2025-08-31T15:05:10:     },
2025-08-31T15:05:10:     duration: '183ms'
2025-08-31T15:05:10:   },
2025-08-31T15:05:10:   url: 'https://timetracker.fmb.com/departments',
2025-08-31T15:05:10:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:05:10:   ip: '192.168.210.12:58575',
2025-08-31T15:05:10:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:05:10: }
2025-08-31T15:05:10: 2025-08-31T22:05:10.070Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677910040-sq3l0m', recordCount: 1 }
2025-08-31T15:05:10: 2025-08-31T22:05:10.070Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:10:   "userId": "user-1756655138413",
2025-08-31T15:05:10:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:10: }
2025-08-31T15:05:10: 2025-08-31T22:05:09.983Z 🔴 [FRONTEND-API] Request 6f16gng85 exception {
2025-08-31T15:05:10:   data: {
2025-08-31T15:05:10:     requestId: '6f16gng85',
2025-08-31T15:05:10:     method: 'POST',
2025-08-31T15:05:10:     url: '/api/departments',
2025-08-31T15:05:10:     error: {
2025-08-31T15:05:10:       name: 'Error',
2025-08-31T15:05:10:       message: 'Invalid organization data. Please verify organization exists.',
2025-08-31T15:05:10:       stack: 'Error: Invalid organization data. Please verify organization exists.\n' +
2025-08-31T15:05:10:         '    at ft (https://timetracker.fmb.com/assets/index-ClBr-oWO.js:48:39639)'
2025-08-31T15:05:10:     }
2025-08-31T15:05:10:   },
2025-08-31T15:05:10:   url: 'https://timetracker.fmb.com/departments',
2025-08-31T15:05:10:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:05:10:   ip: '192.168.210.12:58575',
2025-08-31T15:05:10:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:05:10: }
2025-08-31T15:05:14: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:14: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:14: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:14: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:14: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:14: 2025-08-31T22:05:14.548Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677914519-jxvl75', recordCount: 1 }
2025-08-31T15:05:14: 2025-08-31T22:05:14.548Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:14:   "userId": "user-1756655138413",
2025-08-31T15:05:14:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.552Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677914523-c95o0b', recordCount: 1 }
2025-08-31T15:05:14: 2025-08-31T22:05:14.552Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:14:   "userId": "user-1756655138413",
2025-08-31T15:05:14:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.552Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/departments {
2025-08-31T15:05:14:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:14:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:14:   "isAuthenticated": true
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.552Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:14:   "userId": "user-1756655138413",
2025-08-31T15:05:14:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.554Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677914522-2kjxtq', recordCount: 1 }
2025-08-31T15:05:14: 2025-08-31T22:05:14.554Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:14:   "userId": "user-1756655138413",
2025-08-31T15:05:14:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.554Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/employees {
2025-08-31T15:05:14:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:14:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:14:   "isAuthenticated": true
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.554Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:14:   "userId": "user-1756655138413",
2025-08-31T15:05:14:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:14: 2025-08-31T22:05:14.556Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677914526-c48l9z', recordCount: 1 }
2025-08-31T15:05:14: 2025-08-31T22:05:14.556Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:14:   "userId": "user-1756655138413",
2025-08-31T15:05:14:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.556Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:05:14:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:14:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:14:   "isAuthenticated": true
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.556Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:14:   "userId": "user-1756655138413",
2025-08-31T15:05:14:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.556Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:05:14: 2025-08-31T22:05:14.560Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677914527-1s1v8j', recordCount: 1 }
2025-08-31T15:05:14: 2025-08-31T22:05:14.560Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:14:   "userId": "user-1756655138413",
2025-08-31T15:05:14:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.561Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:05:14:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:14:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:14:   "isAuthenticated": true
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 2025-08-31T22:05:14.561Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:14:   "userId": "user-1756655138413",
2025-08-31T15:05:14:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:14: }
2025-08-31T15:05:14: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:14: 2025-08-31T22:05:14.580Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677914552-txdvyf', recordCount: 1 }
2025-08-31T15:05:14: 📋 Departments API: Found 1 departments
2025-08-31T15:05:14: 2025-08-31T22:05:14.582Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677914554-vl4glz', recordCount: 0 }
2025-08-31T15:05:14: 2025-08-31T22:05:14.584Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:05:14: 2025-08-31T22:05:14.587Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677914561-vqew9k', recordCount: 1 }
2025-08-31T15:05:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:16: 2025-08-31T22:05:16.599Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677916572-5nhm97', recordCount: 1 }
2025-08-31T15:05:16: 2025-08-31T22:05:16.599Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:16:   "userId": "user-1756655138413",
2025-08-31T15:05:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 2025-08-31T22:05:16.601Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677916573-nnwl1j', recordCount: 1 }
2025-08-31T15:05:16: 2025-08-31T22:05:16.602Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:16:   "userId": "user-1756655138413",
2025-08-31T15:05:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 2025-08-31T22:05:16.602Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:05:16:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:16:   "isAuthenticated": true
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 2025-08-31T22:05:16.602Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:16:   "userId": "user-1756655138413",
2025-08-31T15:05:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:16: 2025-08-31T22:05:16.605Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677916574-05rkda', recordCount: 1 }
2025-08-31T15:05:16: 2025-08-31T22:05:16.605Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:16:   "userId": "user-1756655138413",
2025-08-31T15:05:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 2025-08-31T22:05:16.606Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:05:16:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:16:   "isAuthenticated": true
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 2025-08-31T22:05:16.606Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:16:   "userId": "user-1756655138413",
2025-08-31T15:05:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 2025-08-31T22:05:16.606Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:05:16: 2025-08-31T22:05:16.606Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677916577-iziyzc', recordCount: 1 }
2025-08-31T15:05:16: 2025-08-31T22:05:16.607Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:16:   "userId": "user-1756655138413",
2025-08-31T15:05:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 2025-08-31T22:05:16.607Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/projects {
2025-08-31T15:05:16:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:16:   "isAuthenticated": true
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 2025-08-31T22:05:16.607Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:16:   "userId": "user-1756655138413",
2025-08-31T15:05:16:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:16: 2025-08-31T22:05:16.630Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677916602-nhf5eg', recordCount: 1 }
2025-08-31T15:05:16: 2025-08-31T22:05:16.633Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:05:16: ❌ [EXECUTE-exec-1756677916607-8qfxgc] Query execution failed: {
2025-08-31T15:05:16:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:16:   code: 'EREQUEST',
2025-08-31T15:05:16:   number: 13601,
2025-08-31T15:05:16:   severity: 16,
2025-08-31T15:05:16:   state: 1,
2025-08-31T15:05:16:   procedure: '',
2025-08-31T15:05:16:   lineNumber: 2,
2025-08-31T15:05:16:   query: '\n' +
2025-08-31T15:05:16:     '      SELECT p.*,\n' +
2025-08-31T15:05:16:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:16:     '         FROM project_employees pe\n' +
2025-08-31T15:05:16:     '         JOIN employees e ON pe.employee_id = e.id\n' +
2025-08-31T15:05:16:     '         WHERE pe.project_id = p',
2025-08-31T15:05:16:   paramCount: 1,
2025-08-31T15:05:16:   paramValues: [ 'user-1756655138413' ]
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 2025-08-31T22:05:16.636Z 🗄️ [FMB-STORAGE] EXECUTE: Query execution failed {
2025-08-31T15:05:16:   executeId: 'exec-1756677916607-8qfxgc',
2025-08-31T15:05:16:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:16:   code: 'EREQUEST',
2025-08-31T15:05:16:   query: '\n' +
2025-08-31T15:05:16:     '      SELECT p.*,\n' +
2025-08-31T15:05:16:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:16:     '         FROM proj...'
2025-08-31T15:05:16: }
2025-08-31T15:05:16: Error fetching projects: RequestError: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:16:     at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:384:15)
2025-08-31T15:05:16:     at Connection.emit (node:events:518:28)
2025-08-31T15:05:16:     at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:16:     at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:16:     at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:16:     at Readable.emit (node:events:518:28)
2025-08-31T15:05:16:     at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:16:     at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:16:     at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:16:     at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:16:   code: 'EREQUEST',
2025-08-31T15:05:16:   originalError: Error: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:16:       at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:382:19)
2025-08-31T15:05:16:       at Connection.emit (node:events:518:28)
2025-08-31T15:05:16:       at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:16:       at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:16:       at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:16:       at Readable.emit (node:events:518:28)
2025-08-31T15:05:16:       at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:16:       at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:16:       at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:16:       at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:16:     info: ErrorMessageToken {
2025-08-31T15:05:16:       name: 'ERROR',
2025-08-31T15:05:16:       handlerName: 'onErrorMessage',
2025-08-31T15:05:16:       number: 13601,
2025-08-31T15:05:16:       state: 1,
2025-08-31T15:05:16:       class: 16,
2025-08-31T15:05:16:       message: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:16:       serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:16:       procName: '',
2025-08-31T15:05:16:       lineNumber: 2
2025-08-31T15:05:16:     }
2025-08-31T15:05:16:   },
2025-08-31T15:05:16:   number: 13601,
2025-08-31T15:05:16:   lineNumber: 2,
2025-08-31T15:05:16:   state: 1,
2025-08-31T15:05:16:   class: 16,
2025-08-31T15:05:16:   serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:16:   procName: '',
2025-08-31T15:05:16:   precedingErrors: []
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:16: 2025-08-31T22:05:16.840Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677916812-tta76a', recordCount: 1 }
2025-08-31T15:05:16: 2025-08-31T22:05:16.840Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:16:   "userId": "user-1756655138413",
2025-08-31T15:05:16:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:16: }
2025-08-31T15:05:16: 2025-08-31T22:05:16.755Z 🔴 [FRONTEND-API] HTTP 500 error on https://timetracker.fmb.com/api/projects {
2025-08-31T15:05:16:   data: {
2025-08-31T15:05:16:     status: 500,
2025-08-31T15:05:16:     statusText: '',
2025-08-31T15:05:16:     responseText: '{"message":"Failed to fetch projects"}',
2025-08-31T15:05:16:     url: 'https://timetracker.fmb.com/api/projects'
2025-08-31T15:05:16:   },
2025-08-31T15:05:16:   url: 'https://timetracker.fmb.com/reports',
2025-08-31T15:05:16:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:05:16:   ip: '192.168.210.12:58575',
2025-08-31T15:05:16:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:05:16: }
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 2025-08-31T22:05:18.054Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918028-ev4pll', recordCount: 1 }
2025-08-31T15:05:18: 2025-08-31T22:05:18.055Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:18:   "userId": "user-1756655138413",
2025-08-31T15:05:18:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 2025-08-31T22:05:18.055Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:05:18:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:18:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:18:   "isAuthenticated": true
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 2025-08-31T22:05:18.055Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:18:   "userId": "user-1756655138413",
2025-08-31T15:05:18:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 2025-08-31T22:05:18.060Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918033-td19tf', recordCount: 1 }
2025-08-31T15:05:18: 2025-08-31T22:05:18.060Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:18:   "userId": "user-1756655138413",
2025-08-31T15:05:18:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 2025-08-31T22:05:18.064Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918037-i7ql8n', recordCount: 1 }
2025-08-31T15:05:18: 2025-08-31T22:05:18.064Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:18:   "userId": "user-1756655138413",
2025-08-31T15:05:18:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 2025-08-31T22:05:18.065Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:05:18:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:18:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:18:   "isAuthenticated": true
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 2025-08-31T22:05:18.065Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:18:   "userId": "user-1756655138413",
2025-08-31T15:05:18:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 2025-08-31T22:05:18.065Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:05:18: 2025-08-31T22:05:18.066Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918036-ycivit', recordCount: 1 }
2025-08-31T15:05:18: 2025-08-31T22:05:18.066Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:18:   "userId": "user-1756655138413",
2025-08-31T15:05:18:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 2025-08-31T22:05:18.066Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/projects {
2025-08-31T15:05:18:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:18:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:18:   "isAuthenticated": true
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 2025-08-31T22:05:18.066Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:18:   "userId": "user-1756655138413",
2025-08-31T15:05:18:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 2025-08-31T22:05:18.082Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918055-k30wgn', recordCount: 1 }
2025-08-31T15:05:18: 2025-08-31T22:05:18.093Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:05:18: ❌ [EXECUTE-exec-1756677918066-ija4oz] Query execution failed: {
2025-08-31T15:05:18:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:18:   code: 'EREQUEST',
2025-08-31T15:05:18:   number: 13601,
2025-08-31T15:05:18:   severity: 16,
2025-08-31T15:05:18:   state: 1,
2025-08-31T15:05:18:   procedure: '',
2025-08-31T15:05:18:   lineNumber: 2,
2025-08-31T15:05:18:   query: '\n' +
2025-08-31T15:05:18:     '      SELECT p.*,\n' +
2025-08-31T15:05:18:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:18:     '         FROM project_employees pe\n' +
2025-08-31T15:05:18:     '         JOIN employees e ON pe.employee_id = e.id\n' +
2025-08-31T15:05:18:     '         WHERE pe.project_id = p',
2025-08-31T15:05:18:   paramCount: 1,
2025-08-31T15:05:18:   paramValues: [ 'user-1756655138413' ]
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 2025-08-31T22:05:18.096Z 🗄️ [FMB-STORAGE] EXECUTE: Query execution failed {
2025-08-31T15:05:18:   executeId: 'exec-1756677918066-ija4oz',
2025-08-31T15:05:18:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:18:   code: 'EREQUEST',
2025-08-31T15:05:18:   query: '\n' +
2025-08-31T15:05:18:     '      SELECT p.*,\n' +
2025-08-31T15:05:18:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:18:     '         FROM proj...'
2025-08-31T15:05:18: }
2025-08-31T15:05:18: Error fetching projects: RequestError: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:18:     at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:384:15)
2025-08-31T15:05:18:     at Connection.emit (node:events:518:28)
2025-08-31T15:05:18:     at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:18:     at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:18:     at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:18:     at Readable.emit (node:events:518:28)
2025-08-31T15:05:18:     at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:18:     at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:18:     at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:18:     at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:18:   code: 'EREQUEST',
2025-08-31T15:05:18:   originalError: Error: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:18:       at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:382:19)
2025-08-31T15:05:18:       at Connection.emit (node:events:518:28)
2025-08-31T15:05:18:       at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:18:       at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:18:       at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:18:       at Readable.emit (node:events:518:28)
2025-08-31T15:05:18:       at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:18:       at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:18:       at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:18:       at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:18:     info: ErrorMessageToken {
2025-08-31T15:05:18:       name: 'ERROR',
2025-08-31T15:05:18:       handlerName: 'onErrorMessage',
2025-08-31T15:05:18:       number: 13601,
2025-08-31T15:05:18:       state: 1,
2025-08-31T15:05:18:       class: 16,
2025-08-31T15:05:18:       message: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:18:       serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:18:       procName: '',
2025-08-31T15:05:18:       lineNumber: 2
2025-08-31T15:05:18:     }
2025-08-31T15:05:18:   },
2025-08-31T15:05:18:   number: 13601,
2025-08-31T15:05:18:   lineNumber: 2,
2025-08-31T15:05:18:   state: 1,
2025-08-31T15:05:18:   class: 16,
2025-08-31T15:05:18:   serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:18:   procName: '',
2025-08-31T15:05:18:   precedingErrors: []
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 2025-08-31T22:05:18.294Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918265-uyu9z8', recordCount: 1 }
2025-08-31T15:05:18: 2025-08-31T22:05:18.294Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:18:   "userId": "user-1756655138413",
2025-08-31T15:05:18:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 2025-08-31T22:05:18.216Z 🔴 [FRONTEND-API] HTTP 500 error on https://timetracker.fmb.com/api/projects {
2025-08-31T15:05:18:   data: {
2025-08-31T15:05:18:     status: 500,
2025-08-31T15:05:18:     statusText: '',
2025-08-31T15:05:18:     responseText: '{"message":"Failed to fetch projects"}',
2025-08-31T15:05:18:     url: 'https://timetracker.fmb.com/api/projects'
2025-08-31T15:05:18:   },
2025-08-31T15:05:18:   url: 'https://timetracker.fmb.com/tasks',
2025-08-31T15:05:18:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:05:18:   ip: '192.168.210.12:58575',
2025-08-31T15:05:18:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:05:18: }
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:18: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:19: 2025-08-31T22:05:19.012Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918985-wq9rqv', recordCount: 1 }
2025-08-31T15:05:19: 2025-08-31T22:05:19.012Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:19:   "userId": "user-1756655138413",
2025-08-31T15:05:19:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.016Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918987-3wmm3b', recordCount: 1 }
2025-08-31T15:05:19: 2025-08-31T22:05:19.016Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:19:   "userId": "user-1756655138413",
2025-08-31T15:05:19:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.016Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:05:19:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:19:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:19:   "isAuthenticated": true
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.016Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:19:   "userId": "user-1756655138413",
2025-08-31T15:05:19:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.017Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:05:19: 2025-08-31T22:05:19.018Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918987-cx2gql', recordCount: 1 }
2025-08-31T15:05:19: 2025-08-31T22:05:19.018Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:19:   "userId": "user-1756655138413",
2025-08-31T15:05:19:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.018Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:05:19:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:19:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:19:   "isAuthenticated": true
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.018Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:19:   "userId": "user-1756655138413",
2025-08-31T15:05:19:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:19: 2025-08-31T22:05:19.019Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918990-vkwy34', recordCount: 1 }
2025-08-31T15:05:19: 2025-08-31T22:05:19.019Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:19:   "userId": "user-1756655138413",
2025-08-31T15:05:19:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.019Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/projects {
2025-08-31T15:05:19:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:19:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:19:   "isAuthenticated": true
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.020Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:19:   "userId": "user-1756655138413",
2025-08-31T15:05:19:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:19: 2025-08-31T22:05:19.020Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677918988-uvv6yv', recordCount: 1 }
2025-08-31T15:05:19: 2025-08-31T22:05:19.020Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:19:   "userId": "user-1756655138413",
2025-08-31T15:05:19:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.020Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/employees {
2025-08-31T15:05:19:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:19:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:19:   "isAuthenticated": true
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.021Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:19:   "userId": "user-1756655138413",
2025-08-31T15:05:19:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:19: 2025-08-31T22:05:19.043Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:05:19: 2025-08-31T22:05:19.045Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677919018-kr8yem', recordCount: 1 }
2025-08-31T15:05:19: 2025-08-31T22:05:19.047Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677919021-iu5zix', recordCount: 0 }
2025-08-31T15:05:19: ❌ [EXECUTE-exec-1756677919020-8rz1q7] Query execution failed: {
2025-08-31T15:05:19:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:19:   code: 'EREQUEST',
2025-08-31T15:05:19:   number: 13601,
2025-08-31T15:05:19:   severity: 16,
2025-08-31T15:05:19:   state: 1,
2025-08-31T15:05:19:   procedure: '',
2025-08-31T15:05:19:   lineNumber: 2,
2025-08-31T15:05:19:   query: '\n' +
2025-08-31T15:05:19:     '      SELECT p.*,\n' +
2025-08-31T15:05:19:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:19:     '         FROM project_employees pe\n' +
2025-08-31T15:05:19:     '         JOIN employees e ON pe.employee_id = e.id\n' +
2025-08-31T15:05:19:     '         WHERE pe.project_id = p',
2025-08-31T15:05:19:   paramCount: 1,
2025-08-31T15:05:19:   paramValues: [ 'user-1756655138413' ]
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.049Z 🗄️ [FMB-STORAGE] EXECUTE: Query execution failed {
2025-08-31T15:05:19:   executeId: 'exec-1756677919020-8rz1q7',
2025-08-31T15:05:19:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:19:   code: 'EREQUEST',
2025-08-31T15:05:19:   query: '\n' +
2025-08-31T15:05:19:     '      SELECT p.*,\n' +
2025-08-31T15:05:19:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:19:     '         FROM proj...'
2025-08-31T15:05:19: }
2025-08-31T15:05:19: Error fetching projects: RequestError: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:19:     at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:384:15)
2025-08-31T15:05:19:     at Connection.emit (node:events:518:28)
2025-08-31T15:05:19:     at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:19:     at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:19:     at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:19:     at Readable.emit (node:events:518:28)
2025-08-31T15:05:19:     at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:19:     at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:19:     at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:19:     at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:19:   code: 'EREQUEST',
2025-08-31T15:05:19:   originalError: Error: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:19:       at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:382:19)
2025-08-31T15:05:19:       at Connection.emit (node:events:518:28)
2025-08-31T15:05:19:       at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:19:       at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:19:       at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:19:       at Readable.emit (node:events:518:28)
2025-08-31T15:05:19:       at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:19:       at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:19:       at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:19:       at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:19:     info: ErrorMessageToken {
2025-08-31T15:05:19:       name: 'ERROR',
2025-08-31T15:05:19:       handlerName: 'onErrorMessage',
2025-08-31T15:05:19:       number: 13601,
2025-08-31T15:05:19:       state: 1,
2025-08-31T15:05:19:       class: 16,
2025-08-31T15:05:19:       message: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:19:       serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:19:       procName: '',
2025-08-31T15:05:19:       lineNumber: 2
2025-08-31T15:05:19:     }
2025-08-31T15:05:19:   },
2025-08-31T15:05:19:   number: 13601,
2025-08-31T15:05:19:   lineNumber: 2,
2025-08-31T15:05:19:   state: 1,
2025-08-31T15:05:19:   class: 16,
2025-08-31T15:05:19:   serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:19:   procName: '',
2025-08-31T15:05:19:   precedingErrors: []
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:19: 2025-08-31T22:05:19.261Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677919234-ducqg2', recordCount: 1 }
2025-08-31T15:05:19: 2025-08-31T22:05:19.261Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:19:   "userId": "user-1756655138413",
2025-08-31T15:05:19:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:19: }
2025-08-31T15:05:19: 2025-08-31T22:05:19.183Z 🔴 [FRONTEND-API] HTTP 500 error on https://timetracker.fmb.com/api/projects {
2025-08-31T15:05:19:   data: {
2025-08-31T15:05:19:     status: 500,
2025-08-31T15:05:19:     statusText: '',
2025-08-31T15:05:19:     responseText: '{"message":"Failed to fetch projects"}',
2025-08-31T15:05:19:     url: 'https://timetracker.fmb.com/api/projects'
2025-08-31T15:05:19:   },
2025-08-31T15:05:19:   url: 'https://timetracker.fmb.com/projects',
2025-08-31T15:05:19:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:05:19:   ip: '192.168.210.12:58575',
2025-08-31T15:05:19:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:05:19: }
2025-08-31T15:05:26: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:26: 2025-08-31T22:05:26.259Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677926232-19wyr3', recordCount: 1 }
2025-08-31T15:05:26: 2025-08-31T22:05:26.259Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:26:   "userId": "user-1756655138413",
2025-08-31T15:05:26:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:26: }
2025-08-31T15:05:26: 2025-08-31T22:05:26.259Z 🟢 [FMB-SAML] FMB Authentication check for POST /api/projects {
2025-08-31T15:05:26:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:26:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:26:   "isAuthenticated": true
2025-08-31T15:05:26: }
2025-08-31T15:05:26: 2025-08-31T22:05:26.259Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:26:   "userId": "user-1756655138413",
2025-08-31T15:05:26:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:26: }
2025-08-31T15:05:26: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:26: 2025-08-31T22:05:26.287Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677926260-5h0a1g', recordCount: 1 }
2025-08-31T15:05:26: 📁 Creating project: "Text" by user: Sravan.Modugula@fmb.com (admin)
2025-08-31T15:05:26: 2025-08-31T22:05:26.288Z 🗄️ [FMB-STORAGE] CREATE_PROJECT: Creating project with data {
2025-08-31T15:05:26:   projectId: 'proj-1756677926288',
2025-08-31T15:05:26:   name: 'Text',
2025-08-31T15:05:26:   user_id: 'user-1756655138413',
2025-08-31T15:05:26:   organization_id: undefined
2025-08-31T15:05:26: }
2025-08-31T15:05:26: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:26: 2025-08-31T22:05:26.357Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677926331-ifj7fv', recordCount: 1 }
2025-08-31T15:05:26: ✅ Project created successfully: proj-1756677926288 - "Text"
2025-08-31T15:05:26: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:26: 2025-08-31T22:05:26.501Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677926474-og91ou', recordCount: 1 }
2025-08-31T15:05:26: 2025-08-31T22:05:26.501Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:26:   "userId": "user-1756655138413",
2025-08-31T15:05:26:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:26: }
2025-08-31T15:05:26: 2025-08-31T22:05:26.501Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/projects {
2025-08-31T15:05:26:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:26:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:26:   "isAuthenticated": true
2025-08-31T15:05:26: }
2025-08-31T15:05:26: 2025-08-31T22:05:26.501Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:26:   "userId": "user-1756655138413",
2025-08-31T15:05:26:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:26: }
2025-08-31T15:05:26: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:26: ❌ [EXECUTE-exec-1756677926501-ed4jvn] Query execution failed: {
2025-08-31T15:05:26:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:26:   code: 'EREQUEST',
2025-08-31T15:05:26:   number: 13601,
2025-08-31T15:05:26:   severity: 16,
2025-08-31T15:05:26:   state: 1,
2025-08-31T15:05:26:   procedure: '',
2025-08-31T15:05:26:   lineNumber: 2,
2025-08-31T15:05:26:   query: '\n' +
2025-08-31T15:05:26:     '      SELECT p.*,\n' +
2025-08-31T15:05:26:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:26:     '         FROM project_employees pe\n' +
2025-08-31T15:05:26:     '         JOIN employees e ON pe.employee_id = e.id\n' +
2025-08-31T15:05:26:     '         WHERE pe.project_id = p',
2025-08-31T15:05:26:   paramCount: 1,
2025-08-31T15:05:26:   paramValues: [ 'user-1756655138413' ]
2025-08-31T15:05:26: }
2025-08-31T15:05:26: 2025-08-31T22:05:26.531Z 🗄️ [FMB-STORAGE] EXECUTE: Query execution failed {
2025-08-31T15:05:26:   executeId: 'exec-1756677926501-ed4jvn',
2025-08-31T15:05:26:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:26:   code: 'EREQUEST',
2025-08-31T15:05:26:   query: '\n' +
2025-08-31T15:05:26:     '      SELECT p.*,\n' +
2025-08-31T15:05:26:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:26:     '         FROM proj...'
2025-08-31T15:05:26: }
2025-08-31T15:05:26: Error fetching projects: RequestError: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:26:     at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:384:15)
2025-08-31T15:05:26:     at Connection.emit (node:events:518:28)
2025-08-31T15:05:26:     at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:26:     at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:26:     at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:26:     at Readable.emit (node:events:518:28)
2025-08-31T15:05:26:     at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:26:     at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:26:     at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:26:     at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:26:   code: 'EREQUEST',
2025-08-31T15:05:26:   originalError: Error: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:26:       at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:382:19)
2025-08-31T15:05:26:       at Connection.emit (node:events:518:28)
2025-08-31T15:05:26:       at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:26:       at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:26:       at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:26:       at Readable.emit (node:events:518:28)
2025-08-31T15:05:26:       at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:26:       at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:26:       at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:26:       at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:26:     info: ErrorMessageToken {
2025-08-31T15:05:26:       name: 'ERROR',
2025-08-31T15:05:26:       handlerName: 'onErrorMessage',
2025-08-31T15:05:26:       number: 13601,
2025-08-31T15:05:26:       state: 1,
2025-08-31T15:05:26:       class: 16,
2025-08-31T15:05:26:       message: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:26:       serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:26:       procName: '',
2025-08-31T15:05:26:       lineNumber: 2
2025-08-31T15:05:26:     }
2025-08-31T15:05:26:   },
2025-08-31T15:05:26:   number: 13601,
2025-08-31T15:05:26:   lineNumber: 2,
2025-08-31T15:05:26:   state: 1,
2025-08-31T15:05:26:   class: 16,
2025-08-31T15:05:26:   serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:26:   procName: '',
2025-08-31T15:05:26:   precedingErrors: []
2025-08-31T15:05:26: }
2025-08-31T15:05:26: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:26: 2025-08-31T22:05:26.697Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677926669-whnhzy', recordCount: 1 }
2025-08-31T15:05:26: 2025-08-31T22:05:26.698Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:26:   "userId": "user-1756655138413",
2025-08-31T15:05:26:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:26: }
2025-08-31T15:05:26: 2025-08-31T22:05:26.607Z 🔴 [FRONTEND-API] HTTP 500 error on https://timetracker.fmb.com/api/projects {
2025-08-31T15:05:26:   data: {
2025-08-31T15:05:26:     status: 500,
2025-08-31T15:05:26:     statusText: '',
2025-08-31T15:05:26:     responseText: '{"message":"Failed to fetch projects"}',
2025-08-31T15:05:26:     url: 'https://timetracker.fmb.com/api/projects'
2025-08-31T15:05:26:   },
2025-08-31T15:05:26:   url: 'https://timetracker.fmb.com/projects',
2025-08-31T15:05:26:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:05:26:   ip: '192.168.210.12:58575',
2025-08-31T15:05:26:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:05:26: }
2025-08-31T15:05:32: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:32: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:32: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:32: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:33: 2025-08-31T22:05:33.003Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677932976-f8rp96', recordCount: 1 }
2025-08-31T15:05:33: 2025-08-31T22:05:33.003Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:33:   "userId": "user-1756655138413",
2025-08-31T15:05:33:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 2025-08-31T22:05:33.003Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/projects {
2025-08-31T15:05:33:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:33:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:33:   "isAuthenticated": true
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 2025-08-31T22:05:33.004Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:33:   "userId": "user-1756655138413",
2025-08-31T15:05:33:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:33: 2025-08-31T22:05:33.004Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677932978-fh06k6', recordCount: 1 }
2025-08-31T15:05:33: 2025-08-31T22:05:33.005Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:33:   "userId": "user-1756655138413",
2025-08-31T15:05:33:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 2025-08-31T22:05:33.005Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:05:33:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:33:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:33:   "isAuthenticated": true
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 2025-08-31T22:05:33.005Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:33:   "userId": "user-1756655138413",
2025-08-31T15:05:33:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:33: 2025-08-31T22:05:33.005Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677932977-5k0rr0', recordCount: 1 }
2025-08-31T15:05:33: 2025-08-31T22:05:33.005Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:33:   "userId": "user-1756655138413",
2025-08-31T15:05:33:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 2025-08-31T22:05:33.006Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:05:33:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:33:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:33:   "isAuthenticated": true
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 2025-08-31T22:05:33.006Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:33:   "userId": "user-1756655138413",
2025-08-31T15:05:33:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 2025-08-31T22:05:33.006Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:05:33: 2025-08-31T22:05:33.023Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677932997-4f8dua', recordCount: 1 }
2025-08-31T15:05:33: 2025-08-31T22:05:33.023Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:33:   "userId": "user-1756655138413",
2025-08-31T15:05:33:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:33: }
2025-08-31T15:05:33: ❌ [EXECUTE-exec-1756677933004-4k9p6i] Query execution failed: {
2025-08-31T15:05:33:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:33:   code: 'EREQUEST',
2025-08-31T15:05:33:   number: 13601,
2025-08-31T15:05:33:   severity: 16,
2025-08-31T15:05:33:   state: 1,
2025-08-31T15:05:33:   procedure: '',
2025-08-31T15:05:33:   lineNumber: 2,
2025-08-31T15:05:33:   query: '\n' +
2025-08-31T15:05:33:     '      SELECT p.*,\n' +
2025-08-31T15:05:33:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:33:     '         FROM project_employees pe\n' +
2025-08-31T15:05:33:     '         JOIN employees e ON pe.employee_id = e.id\n' +
2025-08-31T15:05:33:     '         WHERE pe.project_id = p',
2025-08-31T15:05:33:   paramCount: 1,
2025-08-31T15:05:33:   paramValues: [ 'user-1756655138413' ]
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 2025-08-31T22:05:33.030Z 🗄️ [FMB-STORAGE] EXECUTE: Query execution failed {
2025-08-31T15:05:33:   executeId: 'exec-1756677933004-4k9p6i',
2025-08-31T15:05:33:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:33:   code: 'EREQUEST',
2025-08-31T15:05:33:   query: '\n' +
2025-08-31T15:05:33:     '      SELECT p.*,\n' +
2025-08-31T15:05:33:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:33:     '         FROM proj...'
2025-08-31T15:05:33: }
2025-08-31T15:05:33: Error fetching projects: RequestError: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:33:     at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:384:15)
2025-08-31T15:05:33:     at Connection.emit (node:events:518:28)
2025-08-31T15:05:33:     at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:33:     at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:33:     at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:33:     at Readable.emit (node:events:518:28)
2025-08-31T15:05:33:     at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:33:     at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:33:     at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:33:     at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:33:   code: 'EREQUEST',
2025-08-31T15:05:33:   originalError: Error: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:33:       at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:382:19)
2025-08-31T15:05:33:       at Connection.emit (node:events:518:28)
2025-08-31T15:05:33:       at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:33:       at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:33:       at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:33:       at Readable.emit (node:events:518:28)
2025-08-31T15:05:33:       at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:33:       at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:33:       at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:33:       at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:33:     info: ErrorMessageToken {
2025-08-31T15:05:33:       name: 'ERROR',
2025-08-31T15:05:33:       handlerName: 'onErrorMessage',
2025-08-31T15:05:33:       number: 13601,
2025-08-31T15:05:33:       state: 1,
2025-08-31T15:05:33:       class: 16,
2025-08-31T15:05:33:       message: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:33:       serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:33:       procName: '',
2025-08-31T15:05:33:       lineNumber: 2
2025-08-31T15:05:33:     }
2025-08-31T15:05:33:   },
2025-08-31T15:05:33:   number: 13601,
2025-08-31T15:05:33:   lineNumber: 2,
2025-08-31T15:05:33:   state: 1,
2025-08-31T15:05:33:   class: 16,
2025-08-31T15:05:33:   serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:33:   procName: '',
2025-08-31T15:05:33:   precedingErrors: []
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 2025-08-31T22:05:33.032Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677933005-4arf1n', recordCount: 1 }
2025-08-31T15:05:33: 2025-08-31T22:05:33.034Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:05:33: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:33: 2025-08-31T22:05:33.262Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677933232-0528uu', recordCount: 1 }
2025-08-31T15:05:33: 2025-08-31T22:05:33.263Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:33:   "userId": "user-1756655138413",
2025-08-31T15:05:33:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:33: }
2025-08-31T15:05:33: 2025-08-31T22:05:33.179Z 🔴 [FRONTEND-API] HTTP 500 error on https://timetracker.fmb.com/api/projects {
2025-08-31T15:05:33:   data: {
2025-08-31T15:05:33:     status: 500,
2025-08-31T15:05:33:     statusText: '',
2025-08-31T15:05:33:     responseText: '{"message":"Failed to fetch projects"}',
2025-08-31T15:05:33:     url: 'https://timetracker.fmb.com/api/projects'
2025-08-31T15:05:33:   },
2025-08-31T15:05:33:   url: 'https://timetracker.fmb.com/time-entry',
2025-08-31T15:05:33:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:05:33:   ip: '192.168.210.12:58575',
2025-08-31T15:05:33:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:05:33: }
2025-08-31T15:05:37: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:37: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:37: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:37: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:37: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:37: 2025-08-31T22:05:37.443Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677937417-0kseac', recordCount: 1 }
2025-08-31T15:05:37: 2025-08-31T22:05:37.443Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:37:   "userId": "user-1756655138413",
2025-08-31T15:05:37:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.443Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/projects {
2025-08-31T15:05:37:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:37:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:37:   "isAuthenticated": true
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.443Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:37:   "userId": "user-1756655138413",
2025-08-31T15:05:37:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:37: 2025-08-31T22:05:37.446Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677937419-f1ayu5', recordCount: 1 }
2025-08-31T15:05:37: 2025-08-31T22:05:37.446Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:37:   "userId": "user-1756655138413",
2025-08-31T15:05:37:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.446Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-08-31T15:05:37:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:37:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:37:   "isAuthenticated": true
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.446Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:37:   "userId": "user-1756655138413",
2025-08-31T15:05:37:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:37: 2025-08-31T22:05:37.447Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677937419-d5ss7f', recordCount: 1 }
2025-08-31T15:05:37: 2025-08-31T22:05:37.447Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:37:   "userId": "user-1756655138413",
2025-08-31T15:05:37:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.447Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-08-31T15:05:37:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:37:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:37:   "isAuthenticated": true
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.447Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:37:   "userId": "user-1756655138413",
2025-08-31T15:05:37:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.447Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756655138413' }
2025-08-31T15:05:37: 2025-08-31T22:05:37.448Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677937420-9e0c64', recordCount: 1 }
2025-08-31T15:05:37: 2025-08-31T22:05:37.448Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:37:   "userId": "user-1756655138413",
2025-08-31T15:05:37:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.449Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677937421-p9v1b1', recordCount: 1 }
2025-08-31T15:05:37: 2025-08-31T22:05:37.449Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:37:   "userId": "user-1756655138413",
2025-08-31T15:05:37:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.449Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/time-entries {
2025-08-31T15:05:37:   "ip": "192.168.210.12:58575",
2025-08-31T15:05:37:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d",
2025-08-31T15:05:37:   "isAuthenticated": true
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.449Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-08-31T15:05:37:   "userId": "user-1756655138413",
2025-08-31T15:05:37:   "sessionId": "efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d"
2025-08-31T15:05:37: }
2025-08-31T15:05:37: ❌ [EXECUTE-exec-1756677937444-82jhnd] Query execution failed: {
2025-08-31T15:05:37:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:37:   code: 'EREQUEST',
2025-08-31T15:05:37:   number: 13601,
2025-08-31T15:05:37:   severity: 16,
2025-08-31T15:05:37:   state: 1,
2025-08-31T15:05:37:   procedure: '',
2025-08-31T15:05:37:   lineNumber: 2,
2025-08-31T15:05:37:   query: '\n' +
2025-08-31T15:05:37:     '      SELECT p.*,\n' +
2025-08-31T15:05:37:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:37:     '         FROM project_employees pe\n' +
2025-08-31T15:05:37:     '         JOIN employees e ON pe.employee_id = e.id\n' +
2025-08-31T15:05:37:     '         WHERE pe.project_id = p',
2025-08-31T15:05:37:   paramCount: 1,
2025-08-31T15:05:37:   paramValues: [ 'user-1756655138413' ]
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.470Z 🗄️ [FMB-STORAGE] EXECUTE: Query execution failed {
2025-08-31T15:05:37:   executeId: 'exec-1756677937444-82jhnd',
2025-08-31T15:05:37:   error: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:37:   code: 'EREQUEST',
2025-08-31T15:05:37:   query: '\n' +
2025-08-31T15:05:37:     '      SELECT p.*,\n' +
2025-08-31T15:05:37:     '        (SELECT pe.*, e.first_name, e.last_name, e.employee_id\n' +
2025-08-31T15:05:37:     '         FROM proj...'
2025-08-31T15:05:37: }
2025-08-31T15:05:37: Error fetching projects: RequestError: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:37:     at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:384:15)
2025-08-31T15:05:37:     at Connection.emit (node:events:518:28)
2025-08-31T15:05:37:     at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:37:     at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:37:     at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:37:     at Readable.emit (node:events:518:28)
2025-08-31T15:05:37:     at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:37:     at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:37:     at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:37:     at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:37:   code: 'EREQUEST',
2025-08-31T15:05:37:   originalError: Error: Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.
2025-08-31T15:05:37:       at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:382:19)
2025-08-31T15:05:37:       at Connection.emit (node:events:518:28)
2025-08-31T15:05:37:       at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-08-31T15:05:37:       at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-08-31T15:05:37:       at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-08-31T15:05:37:       at Readable.emit (node:events:518:28)
2025-08-31T15:05:37:       at addChunk (node:internal/streams/readable:561:12)
2025-08-31T15:05:37:       at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-08-31T15:05:37:       at Readable.push (node:internal/streams/readable:393:5)
2025-08-31T15:05:37:       at nextAsync (node:internal/streams/from:194:22) {
2025-08-31T15:05:37:     info: ErrorMessageToken {
2025-08-31T15:05:37:       name: 'ERROR',
2025-08-31T15:05:37:       handlerName: 'onErrorMessage',
2025-08-31T15:05:37:       number: 13601,
2025-08-31T15:05:37:       state: 1,
2025-08-31T15:05:37:       class: 16,
2025-08-31T15:05:37:       message: "Property 'employee_id' cannot be generated in JSON output due to a conflict with another column name or alias. Use different names and aliases for each column in SELECT list.",
2025-08-31T15:05:37:       serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:37:       procName: '',
2025-08-31T15:05:37:       lineNumber: 2
2025-08-31T15:05:37:     }
2025-08-31T15:05:37:   },
2025-08-31T15:05:37:   number: 13601,
2025-08-31T15:05:37:   lineNumber: 2,
2025-08-31T15:05:37:   state: 1,
2025-08-31T15:05:37:   class: 16,
2025-08-31T15:05:37:   serverName: 'FMB-SQLTST20-LV',
2025-08-31T15:05:37:   procName: '',
2025-08-31T15:05:37:   precedingErrors: []
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.472Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677937446-0vkro0', recordCount: 1 }
2025-08-31T15:05:37: 2025-08-31T22:05:37.475Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756655138413', count: 4 }
2025-08-31T15:05:37: 2025-08-31T22:05:37.502Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677937449-dfqck6', recordCount: 3 }
2025-08-31T15:05:37: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:37: 2025-08-31T22:05:37.660Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677937633-i9j6ng', recordCount: 1 }
2025-08-31T15:05:37: 2025-08-31T22:05:37.660Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:37:   "userId": "user-1756655138413",
2025-08-31T15:05:37:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:37: }
2025-08-31T15:05:37: 2025-08-31T22:05:37.579Z 🔴 [FRONTEND-API] HTTP 500 error on https://timetracker.fmb.com/api/projects {
2025-08-31T15:05:37:   data: {
2025-08-31T15:05:37:     status: 500,
2025-08-31T15:05:37:     statusText: '',
2025-08-31T15:05:37:     responseText: '{"message":"Failed to fetch projects"}',
2025-08-31T15:05:37:     url: 'https://timetracker.fmb.com/api/projects'
2025-08-31T15:05:37:   },
2025-08-31T15:05:37:   url: 'https://timetracker.fmb.com/time-log',
2025-08-31T15:05:37:   userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0',
2025-08-31T15:05:37:   ip: '192.168.210.12:58575',
2025-08-31T15:05:37:   sessionId: 'efb3c29b8d027cb2dabedba397ebaabeb2db69310a05ecd2ad4abd61806a2a3d'
2025-08-31T15:05:37: }
2025-08-31T15:05:42: 🗄️ [SQL] Executing with 1 parameters
2025-08-31T15:05:42: 2025-08-31T22:05:42.428Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756677942401-avi493', recordCount: 1 }
2025-08-31T15:05:42: 2025-08-31T22:05:42.428Z 🟢 [FMB-SAML] User deserialized successfully {
2025-08-31T15:05:42:   "userId": "user-1756655138413",
2025-08-31T15:05:42:   "email": "Sravan.Modugula@fmb.com"
2025-08-31T15:05:42: }
