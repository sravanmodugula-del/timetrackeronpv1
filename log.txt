2025-09-02T17:27:24: 2025-09-03T00:27:24.475Z 🟢 [SERVER] Starting FMB TimeTracker On-Premises Application...
2025-09-02T17:27:24: [dotenv@17.2.1] injecting env (0) from fmb-onprem\.env.fmb-onprem -- tip: ⚙️  suppress all logs with { quiet: true }
2025-09-02T17:27:24: [dotenv@17.2.1] injecting env (23) from .env -- tip: 📡 observe env with Radar: https://dotenvx.com/radar
2025-09-02T17:27:24: 🏢 FMB On-Premises configuration loaded
2025-09-02T17:27:24: 🔍 [FMB-CONFIG] Looking for certificate at: C:\fmb-timetracker\saml_cert.pem
2025-09-02T17:27:24: ✅ [FMB-CONFIG] Certificate loaded successfully from: C:\fmb-timetracker\saml_cert.pem
2025-09-02T17:27:24: 🔍 [FMB-CONFIG] Certificate length: 1004 characters
2025-09-02T17:27:24: 2025-09-03T00:27:24.481Z 🟢 [FMB-ONPREM] FMB On-premises environment initialized
2025-09-02T17:27:24: 2025-09-03T00:27:24.481Z 🟢 [CONFIG] FMB session secret validated successfully
2025-09-02T17:27:24: 🔗 Connecting to FMB MS SQL database...
2025-09-02T17:27:24: ✅ FMB Database connection established successfully
2025-09-02T17:27:24: 2025-09-03T00:27:24.578Z 🟢 [DATABASE] FMB Database initialization completed successfully
2025-09-02T17:27:24: 2025-09-03T00:27:24.581Z 🟢 [SESSION] FMB Enterprise Session configured for production mode
2025-09-02T17:27:24: 2025-09-03T00:27:24.581Z 🟢 [SESSION] Using memory session store for development/testing
2025-09-02T17:27:24: 2025-09-03T00:27:24.582Z 🟢 [SESSION] Session store initialization completed
2025-09-02T17:27:24: Warning: connect.session() MemoryStore is not
2025-09-02T17:27:24: designed for a production environment, as it will leak
2025-09-02T17:27:24: memory, and will not scale past a single process.
2025-09-02T17:27:24: 2025-09-03T00:27:24.582Z 🟢 [SERVER] FMB Session middleware configured successfully
2025-09-02T17:27:24: 2025-09-03T00:27:24.584Z 🟢 [SECURITY] Enterprise session security middleware activated
2025-09-02T17:27:24: 🚀 Setting up FMB SAML Authentication for On-Premises environment...
2025-09-02T17:27:24: 2025-09-03T00:27:24.588Z 🔵 [FMB-SAML] Initializing FMB SAML Authentication
2025-09-02T17:27:24: 🔧 [FMB-DATABASE] Creating new FMB storage instance...
2025-09-02T17:27:24: [dotenv@17.2.1] injecting env (0) from fmb-onprem\.env.fmb-onprem -- tip: ⚙️  specify custom .env file path with { path: '/custom/path/.env' }
2025-09-02T17:27:24: [dotenv@17.2.1] injecting env (0) from .env -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }
2025-09-02T17:27:24: 🏢 FMB On-Premises configuration loaded
2025-09-02T17:27:24: 🔍 [FMB-CONFIG] Looking for certificate at: C:\fmb-timetracker\saml_cert.pem
2025-09-02T17:27:24: ✅ [FMB-CONFIG] Certificate loaded successfully from: C:\fmb-timetracker\saml_cert.pem
2025-09-02T17:27:24: 🔍 [FMB-CONFIG] Certificate length: 1004 characters
2025-09-02T17:27:24: 🔗 [FMB-STORAGE] Connecting to FMB MS SQL Server...
2025-09-02T17:27:24: 2025-09-03T00:27:24.591Z 🟢 [FMB-SAML] SAML Certificate validation {
2025-09-02T17:27:24:   "certLength": 1004,
2025-09-02T17:27:24:   "hasBeginMarker": true,
2025-09-02T17:27:24:   "hasEndMarker": true
2025-09-02T17:27:24: }
2025-09-02T17:27:24: 2025-09-03T00:27:24.592Z 🔵 [FMB-SAML] FMB SAML Authentication setup completed
2025-09-02T17:27:24: 🛡️ [SESSION-MGMT] Enterprise session management routes registered
2025-09-02T17:27:24: 🛡️ [SESSION-MGMT] Enterprise session management routes registered
2025-09-02T17:27:24: 2025-09-03T00:27:24.597Z 🟢 [SERVER] FMB TimeTracker running on http://0.0.0.0:3000
2025-09-02T17:27:24: 2025-09-03T00:27:24.597Z 🟢 [SERVER] Environment: fmb-onprem
2025-09-02T17:27:24: 2025-09-03T00:27:24.597Z 🟢 [FMB-ONPREM] On-premises deployment active - SAML authentication enabled
2025-09-02T17:27:24: 2025-09-03T00:27:24.657Z 🗄️ [FMB-STORAGE] CONNECT: Successfully connected to MS SQL Server
2025-09-02T17:27:46: 2025-09-03T00:27:46.490Z 🔵 [FMB-SAML] SAML ACS callback received - IdP-initiated flow {
2025-09-02T17:27:46:   "ip": "192.168.209.85:59843",
2025-09-02T17:27:46:   "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0",
2025-09-02T17:27:46:   "timestamp": "2025-09-03T00:27:46.490Z",
2025-09-02T17:27:46:   "hasBody": true,
2025-09-02T17:27:46:   "bodyKeys": [
2025-09-02T17:27:46:     "SAMLResponse"
2025-09-02T17:27:46:   ],
2025-09-02T17:27:46:   "headers": {
2025-09-02T17:27:46:     "content-type": "application/x-www-form-urlencoded",
2025-09-02T17:27:46:     "content-length": "8093"
2025-09-02T17:27:46:   }
2025-09-02T17:27:46: }
2025-09-02T17:27:46: 2025-09-03T00:27:46.567Z 🔵 [FMB-SAML] SAML profile received {
2025-09-02T17:27:46:   "nameID": "Sravan.Modugula@fmb.com",
2025-09-02T17:27:46:   "email": "Sravan.Modugula@fmb.com",
2025-09-02T17:27:46:   "firstName": "Sravan",
2025-09-02T17:27:46:   "lastName": "Modugula"
2025-09-02T17:27:46: }
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:46: 2025-09-03T00:27:46.674Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266568-2bpzss', recordCount: 1 }
2025-09-02T17:27:46: 🔄 [SQL] 
2025-09-02T17:27:46:  operation on users
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 7 parameters
2025-09-02T17:27:46: ✅ [SQL] Operation completed: 1 rows affected
2025-09-02T17:27:46: 2025-09-03T00:27:46.721Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266675-lbwhgv', recordCount: 0 }
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:46: 2025-09-03T00:27:46.750Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266721-nyvefn', recordCount: 1 }
2025-09-02T17:27:46: 2025-09-03T00:27:46.750Z 🔵 [FMB-SAML] User upserted in database {
2025-09-02T17:27:46:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:46: }
2025-09-02T17:27:46: 2025-09-03T00:27:46.750Z 🔵 [FMB-SAML] User authenticated and stored {
2025-09-02T17:27:46:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:46: }
2025-09-02T17:27:46: 2025-09-03T00:27:46.752Z 🟢 [FMB-SAML] Serializing user for session {
2025-09-02T17:27:46:   "userId": "user-1756847838064",
2025-09-02T17:27:46:   "timestamp": "2025-09-03T00:27:46.752Z",
2025-09-02T17:27:46:   "source": "saml"
2025-09-02T17:27:46: }
2025-09-02T17:27:46: 🔵 [FMB-SAML] User session established and saved: Sravan.Modugula@fmb.com
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:46: 2025-09-03T00:27:46.840Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266810-484sl5', recordCount: 1 }
2025-09-02T17:27:46: 2025-09-03T00:27:46.840Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:46:   "userId": "user-1756847838064",
2025-09-02T17:27:46:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:46: }
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:46: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:46: 2025-09-03T00:27:46.983Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266943-8mtv0r', recordCount: 1 }
2025-09-02T17:27:46: 2025-09-03T00:27:46.984Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:46:   "userId": "user-1756847838064",
2025-09-02T17:27:46:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:46: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.011Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266949-rvhu53', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.011Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.040Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266954-s5rxay', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.040Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.046Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266954-p5a37y', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.047Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.051Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266955-a5l9fm', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.051Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.054Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266961-pp2u2n', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.054Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.058Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859266961-65nqde', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.058Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:47: 2025-09-03T00:27:47.210Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859267181-v28gw3', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.211Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.211Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-09-02T17:27:47:   "ip": "192.168.209.85:59843",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098",
2025-09-02T17:27:47:   "isAuthenticated": true
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.212Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:47: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:47: 2025-09-03T00:27:47.240Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859267212-fsjxdt', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.244Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859267217-k3ppi0', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.244Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:47: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:47: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:47: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:47: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:47: 2025-09-03T00:27:47.347Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859267317-n9q0qi', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.348Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.348Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/auth/user {
2025-09-02T17:27:47:   "ip": "192.168.209.85:59843",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098",
2025-09-02T17:27:47:   "isAuthenticated": true
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.348Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 🗄️ [SQL] Executing with 1 parameters
2025-09-02T17:27:47: 2025-09-03T00:27:47.350Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859267320-79xp8d', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.350Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.351Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/organizations {
2025-09-02T17:27:47:   "ip": "192.168.209.85:59843",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098",
2025-09-02T17:27:47:   "isAuthenticated": true
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.351Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.352Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: Fetching organizations for user { userId: 'user-1756847838064' }
2025-09-02T17:27:47: 2025-09-03T00:27:47.353Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859267323-nl9cmi', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.353Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.354Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/stats {
2025-09-02T17:27:47:   "ip": "192.168.209.85:59843",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098",
2025-09-02T17:27:47:   "isAuthenticated": true
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.354Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 📊 [DASHBOARD-STATS] Request: {
2025-09-02T17:27:47:   userId: 'user-1756847838064',
2025-09-02T17:27:47:   startDate: '2025-08-26',
2025-09-02T17:27:47:   endDate: '2025-09-02'
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 📊 [FMB-STORAGE] Getting dashboard stats for user: user-1756847838064 dateRange: { startDate: '2025-08-26', endDate: '2025-09-02' }
2025-09-02T17:27:47: 📊 [FMB-STORAGE] Date ranges: {
2025-09-02T17:27:47:   today: '2025-09-03',
2025-09-02T17:27:47:   weekStart: '2025-09-02',
2025-09-02T17:27:47:   monthStart: '2025-09-01',
2025-09-02T17:27:47:   filterRange: { startDate: '2025-08-26', endDate: '2025-09-02' }
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.356Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859267326-qazond', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.356Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.357Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/recent-activity {
2025-09-02T17:27:47:   "ip": "192.168.209.85:59843",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098",
2025-09-02T17:27:47:   "isAuthenticated": true
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.357Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 📊 [RECENT-ACTIVITY] Request: {
2025-09-02T17:27:47:   userId: 'user-1756847838064',
2025-09-02T17:27:47:   limit: '10',
2025-09-02T17:27:47:   startDate: '2025-08-26',
2025-09-02T17:27:47:   endDate: '2025-09-02'
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 📋 [FMB-STORAGE] Getting recent activity for user: user-1756847838064 limit: 10 dateRange: { startDate: '2025-08-26', endDate: '2025-09-02' }
2025-09-02T17:27:47: 📋 [FMB-STORAGE] Using date filter for recent activity: { startDate: '2025-08-26', endDate: '2025-09-02' }
2025-09-02T17:27:47: 📋 [FMB-STORAGE] Executing recent activity query with date filter: AND te.date >= @startDate AND te.date <= @endDate
2025-09-02T17:27:47: 2025-09-03T00:27:47.362Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859267324-3o11au', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.362Z 🟢 [FMB-SAML] User deserialized successfully {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "email": "Sravan.Modugula@fmb.com"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.363Z 🟢 [FMB-SAML] FMB Authentication check for GET /api/dashboard/project-breakdown {
2025-09-02T17:27:47:   "ip": "192.168.209.85:59843",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098",
2025-09-02T17:27:47:   "isAuthenticated": true
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 2025-09-03T00:27:47.363Z 🟢 [FMB-SAML] FMB Authentication successful {
2025-09-02T17:27:47:   "userId": "user-1756847838064",
2025-09-02T17:27:47:   "sessionId": "2e494c3dafbfd6e9574320403daeac4c9ddae6612702a6d5060009a27450e098"
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 📊 [PROJECT-BREAKDOWN] Request: {
2025-09-02T17:27:47:   userId: 'user-1756847838064',
2025-09-02T17:27:47:   startDate: '2025-08-26',
2025-09-02T17:27:47:   endDate: '2025-09-02'
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 📊 [FMB-STORAGE] Starting project breakdown query for user: user-1756847838064 dateRange: { startDate: '2025-08-26', endDate: '2025-09-02' }
2025-09-02T17:27:47: 2025-09-03T00:27:47.380Z 🗄️ [FMB-STORAGE] EXECUTE: Query completed successfully { executeId: 'exec-1756859267348-9f09wy', recordCount: 1 }
2025-09-02T17:27:47: 2025-09-03T00:27:47.385Z 🗄️ [FMB-STORAGE] GET_USER_ORGS: User organizations fetched successfully { userId: 'user-1756847838064', count: 1 }
2025-09-02T17:27:47: 📊 [FMB-STORAGE] Dashboard stats calculated: { todayHours: 0, weekHours: 9, monthHours: 9, activeProjects: 1 }
2025-09-02T17:27:47: 📊 [FMB-STORAGE] Today check: {
2025-09-02T17:27:47:   todayStr: '2025-09-03',
2025-09-02T17:27:47:   queryResult: { total_hours: 0 },
2025-09-02T17:27:47:   calculatedToday: 0
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 📊 [DASHBOARD-STATS] Response: { todayHours: 0, weekHours: 9, monthHours: 9, activeProjects: 1 }
2025-09-02T17:27:47: 🔴 [FMB-STORAGE] Error getting recent activity: RequestError: Invalid column name 'color'.
2025-09-02T17:27:47:     at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:384:15)
2025-09-02T17:27:47:     at Connection.emit (node:events:518:28)
2025-09-02T17:27:47:     at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-09-02T17:27:47:     at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-09-02T17:27:47:     at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-09-02T17:27:47:     at Readable.emit (node:events:518:28)
2025-09-02T17:27:47:     at addChunk (node:internal/streams/readable:561:12)
2025-09-02T17:27:47:     at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-09-02T17:27:47:     at Readable.push (node:internal/streams/readable:393:5)
2025-09-02T17:27:47:     at nextAsync (node:internal/streams/from:194:22) {
2025-09-02T17:27:47:   code: 'EREQUEST',
2025-09-02T17:27:47:   originalError: Error: Invalid column name 'color'.
2025-09-02T17:27:47:       at handleError (C:\fmb-timetracker\node_modules\mssql\lib\tedious\request.js:382:19)
2025-09-02T17:27:47:       at Connection.emit (node:events:518:28)
2025-09-02T17:27:47:       at Connection.emit (C:\fmb-timetracker\node_modules\tedious\lib\connection.js:970:18)
2025-09-02T17:27:47:       at RequestTokenHandler.onErrorMessage (C:\fmb-timetracker\node_modules\tedious\lib\token\handler.js:284:21)
2025-09-02T17:27:47:       at Readable.<anonymous> (C:\fmb-timetracker\node_modules\tedious\lib\token\token-stream-parser.js:19:33)
2025-09-02T17:27:47:       at Readable.emit (node:events:518:28)
2025-09-02T17:27:47:       at addChunk (node:internal/streams/readable:561:12)
2025-09-02T17:27:47:       at readableAddChunkPushObjectMode (node:internal/streams/readable:538:3)
2025-09-02T17:27:47:       at Readable.push (node:internal/streams/readable:393:5)
2025-09-02T17:27:47:       at nextAsync (node:internal/streams/from:194:22) {
2025-09-02T17:27:47:     info: ErrorMessageToken {
2025-09-02T17:27:47:       name: 'ERROR',
2025-09-02T17:27:47:       handlerName: 'onErrorMessage',
2025-09-02T17:27:47:       number: 207,
2025-09-02T17:27:47:       state: 1,
2025-09-02T17:27:47:       class: 16,
2025-09-02T17:27:47:       message: "Invalid column name 'color'.",
2025-09-02T17:27:47:       serverName: 'FMB-SQLTST20-LV',
2025-09-02T17:27:47:       procName: '',
2025-09-02T17:27:47:       lineNumber: 11
2025-09-02T17:27:47:     }
2025-09-02T17:27:47:   },
2025-09-02T17:27:47:   number: 207,
2025-09-02T17:27:47:   lineNumber: 11,
2025-09-02T17:27:47:   state: 1,
2025-09-02T17:27:47:   class: 16,
2025-09-02T17:27:47:   serverName: 'FMB-SQLTST20-LV',
2025-09-02T17:27:47:   procName: '',
2025-09-02T17:27:47:   precedingErrors: []
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 📊 [RECENT-ACTIVITY] Response: []
2025-09-02T17:27:47: 📊 [FMB-STORAGE] Time entries check: {
2025-09-02T17:27:47:   total_entries: 3,
2025-09-02T17:27:47:   unique_projects: 1,
2025-09-02T17:27:47:   earliest_date: 2025-09-02T00:00:00.000Z,
2025-09-02T17:27:47:   latest_date: 2025-09-02T00:00:00.000Z,
2025-09-02T17:27:47:   total_hours: 9
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 📊 [FMB-STORAGE] Using date filter from: 2025-08-26 to: 2025-09-02
2025-09-02T17:27:47: 📊 [FMB-STORAGE] Executing breakdown query: 
2025-09-02T17:27:47:         SELECT
2025-09-02T17:27:47:           p.id,
2025-09-02T17:27:47:           p.name,
2025-09-02T17:27:47:           COALESCE(p.color, '#1976D2') as color,
2025-09-02T17:27:47:           COALESCE(SUM(CAST(te.hours as DECIMAL(10,2))), 0) as total_hours,
2025-09-02T17:27:47:           COUNT(te.id) as entry_count
2025-09-02T17:27:47:         FROM projects p
2025-09-02T17:27:47:         INNER JOIN time_entries te ON p.id = te.project_id 
2025-09-02T17:27:47:         WHERE p.user_id = @userId 
2025-09-02T17:27:47:           AND te.user_id = @userId
2025-09-02T17:27:47:           AND CONVERT(date, te.date) >= CONVERT(date, @startDate) 
2025-09-02T17:27:47:           AND CONVERT(date, te.date) <= CONVERT(date, @endDate)
2025-09-02T17:27:47:         
2025-09-02T17:27:47:         GROUP BY p.id, p.name, p.color
2025-09-02T17:27:47:         ORDER BY SUM(CAST(te.hours as DECIMAL(10,2))) DESC
2025-09-02T17:27:47:       
2025-09-02T17:27:47: 🔴 [FMB-STORAGE] Error getting project breakdown: {
2025-09-02T17:27:47:   message: "Invalid column name 'color'.",
2025-09-02T17:27:47:   code: 'EREQUEST',
2025-09-02T17:27:47:   number: 207,
2025-09-02T17:27:47:   severity: 16,
2025-09-02T17:27:47:   state: 1,
2025-09-02T17:27:47:   procedure: '',
2025-09-02T17:27:47:   lineNumber: 5
2025-09-02T17:27:47: }
2025-09-02T17:27:47: 📊 [PROJECT-BREAKDOWN] Response: 0 projects
